{
	"id": "6df25237694d36e1a2903bbfca00c805",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"Maxim/BStakeSystem.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2022-02-28\r\n*/\r\n\r\n//Telegram - https://t.me/HealTheWorldLLC\r\n//website - https://healtheworld.io/\r\n\r\n// SPDX-License-Identifier: Unlicensed\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./lib/IBEP20.sol\";\r\nimport \"./lib/SafeBEP20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./lib/SafeMath.sol\";\r\n \r\ncontract BStakeSystem is Ownable {\r\n\r\n    using SafeBEP20 for IBEP20;\r\n    using SafeMath for uint256;\r\n\r\n    event StakedEvent(address indexed user, uint256 amount);\r\n    event WithdrawEvent(address indexed user, uint256 amount);\r\n    \r\n    struct Stake_t {\r\n        uint256 stakedAmount;\r\n        uint256 totalRewardAmount;\r\n        uint32 level;\r\n        uint256 rewardTime;\r\n    }\r\n\r\n    uint256 cooldownTime = 1 days;\r\n    \r\n    Stake_t[] public stakers;  \r\n    mapping(address => uint256) private _userDetail;\r\n\r\n    function _safeTransferBNB(address to, uint256 value) internal {\r\n        (bool success, ) = to.call{value: value}(\"\");\r\n        require(success, \"TransferHelper: BNB_TRANSFER_FAILED\");\r\n    }\r\n\r\n    function stake() public payable {\r\n        // require(msg.value > 10 ** 18, 'transaction failed');\r\n        if(_userDetail[msg.sender] == 0) {\r\n            stakers.push(Stake_t(msg.value, 0, 1, block.timestamp+cooldownTime));\r\n            uint256 userId = stakers.length;\r\n            _userDetail[msg.sender] = userId;\r\n        }\r\n        else {\r\n            uint256 userId = _userDetail[msg.sender] - 1;\r\n            stakers[userId].stakedAmount += msg.value;\r\n            stakers[userId].rewardTime += block.timestamp+cooldownTime;\r\n        }\r\n        \r\n        emit StakedEvent(address(msg.sender), msg.value);\r\n    }\r\n\r\n    function remainedTime() public returns (uint256) {\r\n        \r\n        uint256 userId = _userDetail[msg.sender] - 1;\r\n\r\n        if(stakers[userId].rewardTime < block.timestamp) {\r\n\r\n            stakers[userId].rewardTime = block.timestamp + cooldownTime;\r\n\r\n            withdraw(msg.sender);\r\n        }\r\n\r\n        return block.timestamp - stakers[userId].rewardTime;\r\n    }\r\n\r\n    function withdraw(address account) public payable{\r\n\r\n        uint256 userId = _userDetail[account] - 1;\r\n        uint256 reward = stakers[userId].stakedAmount * 3 / 100;\r\n\r\n        stakers[userId].totalRewardAmount += reward;\r\n        \r\n        _safeTransferBNB(address(msg.sender), reward);\r\n        emit WithdrawEvent(msg.sender, reward);\r\n    }\r\n\r\n}"
			},
			"Maxim/lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"Maxim/lib/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./IBEP20.sol\";\r\nimport \"./SafeMath.sol\";\r\nimport \"./Address.sol\";\r\n\r\n/**\r\n * @title SafeBEP20\r\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IBEP20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IBEP20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\r\n        );\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance =\r\n            token.allowance(address(this), spender).sub(\r\n                value,\r\n                \"SafeBEP20: decreased allowance below zero\"\r\n            );\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata =\r\n            address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"Maxim/lib/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity ^0.8.4;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"Maxim/lib/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Maxim/BStakeSystem.sol": {
				"BStakeSystem": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakedEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawEvent",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainedTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalRewardAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "level",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "rewardTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Maxim/BStakeSystem.sol\":367:2450  contract BStakeSystem is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Maxim/BStakeSystem.sol\":782:788  1 days */\n  0x015180\n    /* \"Maxim/BStakeSystem.sol\":759:788  uint256 cooldownTime = 1 days */\n  0x01\n  sstore\n    /* \"Maxim/BStakeSystem.sol\":367:2450  contract BStakeSystem is Ownable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Maxim/BStakeSystem.sol\":367:2450  contract BStakeSystem is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Maxim/BStakeSystem.sol\":367:2450  contract BStakeSystem is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Maxim/BStakeSystem.sol\":367:2450  contract BStakeSystem is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb3743586\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfd5e6dd1\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x3a4b66f1\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Maxim/BStakeSystem.sol\":1089:1709  function stake() public payable {... */\n    tag_2:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"Maxim/BStakeSystem.sol\":2097:2445  function withdraw(address account) public payable{... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Maxim/BStakeSystem.sol\":1717:2089  function remainedTime() public returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      stop\n        /* \"Maxim/BStakeSystem.sol\":801:825  Stake_t[] public stakers */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Maxim/BStakeSystem.sol\":1089:1709  function stake() public payable {... */\n    tag_11:\n        /* \"Maxim/BStakeSystem.sol\":1227:1228  0 */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1200:1211  _userDetail */\n      0x03\n        /* \"Maxim/BStakeSystem.sol\":1200:1223  _userDetail[msg.sender] */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1212:1222  msg.sender */\n      caller\n        /* \"Maxim/BStakeSystem.sol\":1200:1223  _userDetail[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Maxim/BStakeSystem.sol\":1200:1228  _userDetail[msg.sender] == 0 */\n      sub\n        /* \"Maxim/BStakeSystem.sol\":1197:1633  if(_userDetail[msg.sender] == 0) {... */\n      tag_41\n      jumpi\n        /* \"Maxim/BStakeSystem.sol\":1245:1252  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":1258:1312  Stake_t(msg.value, 0, 1, block.timestamp+cooldownTime) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Maxim/BStakeSystem.sol\":1266:1275  msg.value */\n      callvalue\n        /* \"Maxim/BStakeSystem.sol\":1258:1312  Stake_t(msg.value, 0, 1, block.timestamp+cooldownTime) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Maxim/BStakeSystem.sol\":1277:1278  0 */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1258:1312  Stake_t(msg.value, 0, 1, block.timestamp+cooldownTime) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Maxim/BStakeSystem.sol\":1280:1281  1 */\n      0x01\n        /* \"Maxim/BStakeSystem.sol\":1258:1312  Stake_t(msg.value, 0, 1, block.timestamp+cooldownTime) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Maxim/BStakeSystem.sol\":1299:1311  cooldownTime */\n      sload(0x01)\n        /* \"Maxim/BStakeSystem.sol\":1283:1298  block.timestamp */\n      timestamp\n        /* \"Maxim/BStakeSystem.sol\":1283:1311  block.timestamp+cooldownTime */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"Maxim/BStakeSystem.sol\":1258:1312  Stake_t(msg.value, 0, 1, block.timestamp+cooldownTime) */\n      dup2\n      mstore\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1245:1313  stakers.push(Stake_t(msg.value, 0, 1, block.timestamp+cooldownTime)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1328:1342  uint256 userId */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1345:1352  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":1345:1359  stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1328:1359  uint256 userId = stakers.length */\n      swap1\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1400:1406  userId */\n      dup1\n        /* \"Maxim/BStakeSystem.sol\":1374:1385  _userDetail */\n      0x03\n        /* \"Maxim/BStakeSystem.sol\":1374:1397  _userDetail[msg.sender] */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1386:1396  msg.sender */\n      caller\n        /* \"Maxim/BStakeSystem.sol\":1374:1397  _userDetail[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Maxim/BStakeSystem.sol\":1374:1406  _userDetail[msg.sender] = userId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1230:1418  {... */\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1197:1633  if(_userDetail[msg.sender] == 0) {... */\n      jump(tag_45)\n    tag_41:\n        /* \"Maxim/BStakeSystem.sol\":1448:1462  uint256 userId */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1491:1492  1 */\n      0x01\n        /* \"Maxim/BStakeSystem.sol\":1465:1476  _userDetail */\n      0x03\n        /* \"Maxim/BStakeSystem.sol\":1465:1488  _userDetail[msg.sender] */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1477:1487  msg.sender */\n      caller\n        /* \"Maxim/BStakeSystem.sol\":1465:1488  _userDetail[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Maxim/BStakeSystem.sol\":1465:1492  _userDetail[msg.sender] - 1 */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"Maxim/BStakeSystem.sol\":1448:1492  uint256 userId = _userDetail[msg.sender] - 1 */\n      swap1\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1539:1548  msg.value */\n      callvalue\n        /* \"Maxim/BStakeSystem.sol\":1507:1514  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":1515:1521  userId */\n      dup3\n        /* \"Maxim/BStakeSystem.sol\":1507:1522  stakers[userId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_48\n      jumpi\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n    tag_48:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Maxim/BStakeSystem.sol\":1507:1535  stakers[userId].stakedAmount */\n      0x00\n      add\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1507:1548  stakers[userId].stakedAmount += msg.value */\n      dup3\n      dup3\n      sload\n      tag_52\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_52:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1609:1621  cooldownTime */\n      sload(0x01)\n        /* \"Maxim/BStakeSystem.sol\":1593:1608  block.timestamp */\n      timestamp\n        /* \"Maxim/BStakeSystem.sol\":1593:1621  block.timestamp+cooldownTime */\n      tag_53\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_53:\n        /* \"Maxim/BStakeSystem.sol\":1563:1570  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":1571:1577  userId */\n      dup3\n        /* \"Maxim/BStakeSystem.sol\":1563:1578  stakers[userId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_54\n      jumpi\n      tag_55\n      tag_50\n      jump\t// in\n    tag_55:\n    tag_54:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Maxim/BStakeSystem.sol\":1563:1589  stakers[userId].rewardTime */\n      0x03\n      add\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1563:1621  stakers[userId].rewardTime += block.timestamp+cooldownTime */\n      dup3\n      dup3\n      sload\n      tag_57\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_57:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1433:1633  {... */\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1197:1633  if(_userDetail[msg.sender] == 0) {... */\n    tag_45:\n        /* \"Maxim/BStakeSystem.sol\":1678:1688  msg.sender */\n      caller\n        /* \"Maxim/BStakeSystem.sol\":1658:1701  StakedEvent(address(msg.sender), msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6bd5a68a4a6cc22607f1514ca193faf12a458c6e5bdf1fdb7a736b2e813c25d9\n        /* \"Maxim/BStakeSystem.sol\":1691:1700  msg.value */\n      callvalue\n        /* \"Maxim/BStakeSystem.sol\":1658:1701  StakedEvent(address(msg.sender), msg.value) */\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Maxim/BStakeSystem.sol\":1089:1709  function stake() public payable {... */\n      jump\t// out\n        /* \"Maxim/BStakeSystem.sol\":2097:2445  function withdraw(address account) public payable{... */\n    tag_15:\n        /* \"Maxim/BStakeSystem.sol\":2159:2173  uint256 userId */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":2199:2200  1 */\n      0x01\n        /* \"Maxim/BStakeSystem.sol\":2176:2187  _userDetail */\n      0x03\n        /* \"Maxim/BStakeSystem.sol\":2176:2196  _userDetail[account] */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":2188:2195  account */\n      dup5\n        /* \"Maxim/BStakeSystem.sol\":2176:2196  _userDetail[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Maxim/BStakeSystem.sol\":2176:2200  _userDetail[account] - 1 */\n      tag_60\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_60:\n        /* \"Maxim/BStakeSystem.sol\":2159:2200  uint256 userId = _userDetail[account] - 1 */\n      swap1\n      pop\n        /* \"Maxim/BStakeSystem.sol\":2211:2225  uint256 reward */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":2263:2266  100 */\n      0x64\n        /* \"Maxim/BStakeSystem.sol\":2259:2260  3 */\n      0x03\n        /* \"Maxim/BStakeSystem.sol\":2228:2235  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":2236:2242  userId */\n      dup5\n        /* \"Maxim/BStakeSystem.sol\":2228:2243  stakers[userId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_62\n      tag_50\n      jump\t// in\n    tag_62:\n    tag_61:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Maxim/BStakeSystem.sol\":2228:2256  stakers[userId].stakedAmount */\n      0x00\n      add\n      sload\n        /* \"Maxim/BStakeSystem.sol\":2228:2260  stakers[userId].stakedAmount * 3 */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"Maxim/BStakeSystem.sol\":2228:2266  stakers[userId].stakedAmount * 3 / 100 */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"Maxim/BStakeSystem.sol\":2211:2266  uint256 reward = stakers[userId].stakedAmount * 3 / 100 */\n      swap1\n      pop\n        /* \"Maxim/BStakeSystem.sol\":2316:2322  reward */\n      dup1\n        /* \"Maxim/BStakeSystem.sol\":2279:2286  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":2287:2293  userId */\n      dup4\n        /* \"Maxim/BStakeSystem.sol\":2279:2294  stakers[userId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_50\n      jump\t// in\n    tag_69:\n    tag_68:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Maxim/BStakeSystem.sol\":2279:2312  stakers[userId].totalRewardAmount */\n      0x01\n      add\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":2279:2322  stakers[userId].totalRewardAmount += reward */\n      dup3\n      dup3\n      sload\n      tag_71\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_71:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Maxim/BStakeSystem.sol\":2343:2388  _safeTransferBNB(address(msg.sender), reward) */\n      tag_72\n        /* \"Maxim/BStakeSystem.sol\":2368:2378  msg.sender */\n      caller\n        /* \"Maxim/BStakeSystem.sol\":2381:2387  reward */\n      dup3\n        /* \"Maxim/BStakeSystem.sol\":2343:2359  _safeTransferBNB */\n      tag_73\n        /* \"Maxim/BStakeSystem.sol\":2343:2388  _safeTransferBNB(address(msg.sender), reward) */\n      jump\t// in\n    tag_72:\n        /* \"Maxim/BStakeSystem.sol\":2418:2428  msg.sender */\n      caller\n        /* \"Maxim/BStakeSystem.sol\":2404:2437  WithdrawEvent(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5dba113b49cfa7c90315e8e604e6b506f7abcb909b01dcb19ec39005086e68fc\n        /* \"Maxim/BStakeSystem.sol\":2430:2436  reward */\n      dup3\n        /* \"Maxim/BStakeSystem.sol\":2404:2437  WithdrawEvent(msg.sender, reward) */\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Maxim/BStakeSystem.sol\":2146:2445  {... */\n      pop\n      pop\n        /* \"Maxim/BStakeSystem.sol\":2097:2445  function withdraw(address account) public payable{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_21\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Maxim/BStakeSystem.sol\":1717:2089  function remainedTime() public returns (uint256) {... */\n    tag_26:\n        /* \"Maxim/BStakeSystem.sol\":1757:1764  uint256 */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1787:1801  uint256 userId */\n      dup1\n        /* \"Maxim/BStakeSystem.sol\":1830:1831  1 */\n      0x01\n        /* \"Maxim/BStakeSystem.sol\":1804:1815  _userDetail */\n      0x03\n        /* \"Maxim/BStakeSystem.sol\":1804:1827  _userDetail[msg.sender] */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":1816:1826  msg.sender */\n      caller\n        /* \"Maxim/BStakeSystem.sol\":1804:1827  _userDetail[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Maxim/BStakeSystem.sol\":1804:1831  _userDetail[msg.sender] - 1 */\n      tag_87\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_87:\n        /* \"Maxim/BStakeSystem.sol\":1787:1831  uint256 userId = _userDetail[msg.sender] - 1 */\n      swap1\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1876:1891  block.timestamp */\n      timestamp\n        /* \"Maxim/BStakeSystem.sol\":1847:1854  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":1855:1861  userId */\n      dup3\n        /* \"Maxim/BStakeSystem.sol\":1847:1862  stakers[userId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_89\n      tag_50\n      jump\t// in\n    tag_89:\n    tag_88:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Maxim/BStakeSystem.sol\":1847:1873  stakers[userId].rewardTime */\n      0x03\n      add\n      sload\n        /* \"Maxim/BStakeSystem.sol\":1847:1891  stakers[userId].rewardTime < block.timestamp */\n      lt\n        /* \"Maxim/BStakeSystem.sol\":1844:2018  if(stakers[userId].rewardTime < block.timestamp) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"Maxim/BStakeSystem.sol\":1957:1969  cooldownTime */\n      sload(0x01)\n        /* \"Maxim/BStakeSystem.sol\":1939:1954  block.timestamp */\n      timestamp\n        /* \"Maxim/BStakeSystem.sol\":1939:1969  block.timestamp + cooldownTime */\n      tag_92\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_92:\n        /* \"Maxim/BStakeSystem.sol\":1910:1917  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":1918:1924  userId */\n      dup3\n        /* \"Maxim/BStakeSystem.sol\":1910:1925  stakers[userId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_94\n      tag_50\n      jump\t// in\n    tag_94:\n    tag_93:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Maxim/BStakeSystem.sol\":1910:1936  stakers[userId].rewardTime */\n      0x03\n      add\n        /* \"Maxim/BStakeSystem.sol\":1910:1969  stakers[userId].rewardTime = block.timestamp + cooldownTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1986:2006  withdraw(msg.sender) */\n      tag_96\n        /* \"Maxim/BStakeSystem.sol\":1995:2005  msg.sender */\n      caller\n        /* \"Maxim/BStakeSystem.sol\":1986:1994  withdraw */\n      tag_15\n        /* \"Maxim/BStakeSystem.sol\":1986:2006  withdraw(msg.sender) */\n      jump\t// in\n    tag_96:\n        /* \"Maxim/BStakeSystem.sol\":1844:2018  if(stakers[userId].rewardTime < block.timestamp) {... */\n    tag_91:\n        /* \"Maxim/BStakeSystem.sol\":2055:2062  stakers */\n      0x02\n        /* \"Maxim/BStakeSystem.sol\":2063:2069  userId */\n      dup2\n        /* \"Maxim/BStakeSystem.sol\":2055:2070  stakers[userId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_50\n      jump\t// in\n    tag_98:\n    tag_97:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Maxim/BStakeSystem.sol\":2055:2081  stakers[userId].rewardTime */\n      0x03\n      add\n      sload\n        /* \"Maxim/BStakeSystem.sol\":2037:2052  block.timestamp */\n      timestamp\n        /* \"Maxim/BStakeSystem.sol\":2037:2081  block.timestamp - stakers[userId].rewardTime */\n      tag_100\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_100:\n        /* \"Maxim/BStakeSystem.sol\":2030:2081  return block.timestamp - stakers[userId].rewardTime */\n      swap2\n      pop\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1717:2089  function remainedTime() public returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_21\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_81\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Maxim/BStakeSystem.sol\":801:825  Stake_t[] public stakers */\n    tag_37:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"Maxim/BStakeSystem.sol\":890:1081  function _safeTransferBNB(address to, uint256 value) internal {... */\n    tag_73:\n        /* \"Maxim/BStakeSystem.sol\":964:976  bool success */\n      0x00\n        /* \"Maxim/BStakeSystem.sol\":982:984  to */\n      dup3\n        /* \"Maxim/BStakeSystem.sol\":982:989  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Maxim/BStakeSystem.sol\":997:1002  value */\n      dup3\n        /* \"Maxim/BStakeSystem.sol\":982:1007  to.call{value: value}(\"\") */\n      mload(0x40)\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_118\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_117)\n    tag_118:\n      0x60\n      swap2\n      pop\n    tag_117:\n      pop\n        /* \"Maxim/BStakeSystem.sol\":963:1007  (bool success, ) = to.call{value: value}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Maxim/BStakeSystem.sol\":1026:1033  success */\n      dup1\n        /* \"Maxim/BStakeSystem.sol\":1018:1073  require(success, \"TransferHelper: BNB_TRANSFER_FAILED\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"Maxim/BStakeSystem.sol\":952:1081  {... */\n      pop\n        /* \"Maxim/BStakeSystem.sol\":890:1081  function _safeTransferBNB(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_125:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_127:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_128:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_156\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_127\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_129:\n        /* \"#utility.yul\":641:665   */\n      tag_158\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_128\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_159:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_130:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_161\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_129\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_164\n      tag_125\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":917:1036   */\n    tag_163:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_165\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_130\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_131:\n        /* \"#utility.yul\":1263:1287   */\n      tag_167\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_128\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_23:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_169\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_131\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1605   */\n    tag_132:\n        /* \"#utility.yul\":1565:1572   */\n      0x00\n        /* \"#utility.yul\":1594:1599   */\n      dup2\n        /* \"#utility.yul\":1583:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_133:\n        /* \"#utility.yul\":1698:1722   */\n      tag_172\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_132\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_28:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_174\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_133\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_134:\n        /* \"#utility.yul\":2036:2060   */\n      tag_176\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_132\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_177:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_135:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_179\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_134\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2565   */\n    tag_36:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2332:2341   */\n      dup3\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_182\n      tag_125\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2312:2431   */\n    tag_181:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_183\n        /* \"#utility.yul\":2540:2547   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_135\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2485:2548   */\n      swap2\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2236:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2664   */\n    tag_136:\n        /* \"#utility.yul\":2607:2614   */\n      0x00\n        /* \"#utility.yul\":2647:2657   */\n      0xffffffff\n        /* \"#utility.yul\":2640:2645   */\n      dup3\n        /* \"#utility.yul\":2636:2658   */\n      and\n        /* \"#utility.yul\":2625:2658   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2670:2785   */\n    tag_137:\n        /* \"#utility.yul\":2755:2778   */\n      tag_186\n        /* \"#utility.yul\":2772:2777   */\n      dup2\n        /* \"#utility.yul\":2755:2778   */\n      tag_136\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2750:2753   */\n      dup3\n        /* \"#utility.yul\":2743:2779   */\n      mstore\n        /* \"#utility.yul\":2670:2785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3340   */\n    tag_39:\n        /* \"#utility.yul\":2966:2970   */\n      0x00\n        /* \"#utility.yul\":3004:3007   */\n      0x80\n        /* \"#utility.yul\":2993:3002   */\n      dup3\n        /* \"#utility.yul\":2989:3008   */\n      add\n        /* \"#utility.yul\":2981:3008   */\n      swap1\n      pop\n        /* \"#utility.yul\":3018:3089   */\n      tag_188\n        /* \"#utility.yul\":3086:3087   */\n      0x00\n        /* \"#utility.yul\":3075:3084   */\n      dup4\n        /* \"#utility.yul\":3071:3088   */\n      add\n        /* \"#utility.yul\":3062:3068   */\n      dup8\n        /* \"#utility.yul\":3018:3089   */\n      tag_133\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3099:3171   */\n      tag_189\n        /* \"#utility.yul\":3167:3169   */\n      0x20\n        /* \"#utility.yul\":3156:3165   */\n      dup4\n        /* \"#utility.yul\":3152:3170   */\n      add\n        /* \"#utility.yul\":3143:3149   */\n      dup7\n        /* \"#utility.yul\":3099:3171   */\n      tag_133\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3181:3251   */\n      tag_190\n        /* \"#utility.yul\":3247:3249   */\n      0x40\n        /* \"#utility.yul\":3236:3245   */\n      dup4\n        /* \"#utility.yul\":3232:3250   */\n      add\n        /* \"#utility.yul\":3223:3229   */\n      dup6\n        /* \"#utility.yul\":3181:3251   */\n      tag_137\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3261:3333   */\n      tag_191\n        /* \"#utility.yul\":3329:3331   */\n      0x60\n        /* \"#utility.yul\":3318:3327   */\n      dup4\n        /* \"#utility.yul\":3314:3332   */\n      add\n        /* \"#utility.yul\":3305:3311   */\n      dup5\n        /* \"#utility.yul\":3261:3333   */\n      tag_133\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2791:3340   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3346:3526   */\n    tag_138:\n        /* \"#utility.yul\":3394:3471   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3391:3392   */\n      0x00\n        /* \"#utility.yul\":3384:3472   */\n      mstore\n        /* \"#utility.yul\":3491:3495   */\n      0x11\n        /* \"#utility.yul\":3488:3489   */\n      0x04\n        /* \"#utility.yul\":3481:3496   */\n      mstore\n        /* \"#utility.yul\":3515:3519   */\n      0x24\n        /* \"#utility.yul\":3512:3513   */\n      0x00\n        /* \"#utility.yul\":3505:3520   */\n      revert\n        /* \"#utility.yul\":3532:3837   */\n    tag_43:\n        /* \"#utility.yul\":3572:3575   */\n      0x00\n        /* \"#utility.yul\":3591:3611   */\n      tag_194\n        /* \"#utility.yul\":3609:3610   */\n      dup3\n        /* \"#utility.yul\":3591:3611   */\n      tag_132\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3586:3611   */\n      swap2\n      pop\n        /* \"#utility.yul\":3625:3645   */\n      tag_195\n        /* \"#utility.yul\":3643:3644   */\n      dup4\n        /* \"#utility.yul\":3625:3645   */\n      tag_132\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3620:3645   */\n      swap3\n      pop\n        /* \"#utility.yul\":3779:3780   */\n      dup3\n        /* \"#utility.yul\":3711:3777   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3707:3781   */\n      sub\n        /* \"#utility.yul\":3704:3705   */\n      dup3\n        /* \"#utility.yul\":3701:3782   */\n      gt\n        /* \"#utility.yul\":3698:3805   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":3785:3803   */\n      tag_197\n      tag_138\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3698:3805   */\n    tag_196:\n        /* \"#utility.yul\":3829:3830   */\n      dup3\n        /* \"#utility.yul\":3826:3827   */\n      dup3\n        /* \"#utility.yul\":3822:3831   */\n      add\n        /* \"#utility.yul\":3815:3831   */\n      swap1\n      pop\n        /* \"#utility.yul\":3532:3837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3843:4034   */\n    tag_47:\n        /* \"#utility.yul\":3883:3887   */\n      0x00\n        /* \"#utility.yul\":3903:3923   */\n      tag_199\n        /* \"#utility.yul\":3921:3922   */\n      dup3\n        /* \"#utility.yul\":3903:3923   */\n      tag_132\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3898:3923   */\n      swap2\n      pop\n        /* \"#utility.yul\":3937:3957   */\n      tag_200\n        /* \"#utility.yul\":3955:3956   */\n      dup4\n        /* \"#utility.yul\":3937:3957   */\n      tag_132\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3932:3957   */\n      swap3\n      pop\n        /* \"#utility.yul\":3976:3977   */\n      dup3\n        /* \"#utility.yul\":3973:3974   */\n      dup3\n        /* \"#utility.yul\":3970:3978   */\n      lt\n        /* \"#utility.yul\":3967:4001   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":3981:3999   */\n      tag_202\n      tag_138\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3967:4001   */\n    tag_201:\n        /* \"#utility.yul\":4026:4027   */\n      dup3\n        /* \"#utility.yul\":4023:4024   */\n      dup3\n        /* \"#utility.yul\":4019:4028   */\n      sub\n        /* \"#utility.yul\":4011:4028   */\n      swap1\n      pop\n        /* \"#utility.yul\":3843:4034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4040:4220   */\n    tag_50:\n        /* \"#utility.yul\":4088:4165   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4085:4086   */\n      0x00\n        /* \"#utility.yul\":4078:4166   */\n      mstore\n        /* \"#utility.yul\":4185:4189   */\n      0x32\n        /* \"#utility.yul\":4182:4183   */\n      0x04\n        /* \"#utility.yul\":4175:4190   */\n      mstore\n        /* \"#utility.yul\":4209:4213   */\n      0x24\n        /* \"#utility.yul\":4206:4207   */\n      0x00\n        /* \"#utility.yul\":4199:4214   */\n      revert\n        /* \"#utility.yul\":4226:4574   */\n    tag_65:\n        /* \"#utility.yul\":4266:4273   */\n      0x00\n        /* \"#utility.yul\":4289:4309   */\n      tag_205\n        /* \"#utility.yul\":4307:4308   */\n      dup3\n        /* \"#utility.yul\":4289:4309   */\n      tag_132\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4284:4309   */\n      swap2\n      pop\n        /* \"#utility.yul\":4323:4343   */\n      tag_206\n        /* \"#utility.yul\":4341:4342   */\n      dup4\n        /* \"#utility.yul\":4323:4343   */\n      tag_132\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4318:4343   */\n      swap3\n      pop\n        /* \"#utility.yul\":4511:4512   */\n      dup2\n        /* \"#utility.yul\":4443:4509   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4439:4513   */\n      div\n        /* \"#utility.yul\":4436:4437   */\n      dup4\n        /* \"#utility.yul\":4433:4514   */\n      gt\n        /* \"#utility.yul\":4428:4429   */\n      dup3\n        /* \"#utility.yul\":4421:4430   */\n      iszero\n        /* \"#utility.yul\":4414:4431   */\n      iszero\n        /* \"#utility.yul\":4410:4515   */\n      and\n        /* \"#utility.yul\":4407:4538   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":4518:4536   */\n      tag_208\n      tag_138\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4407:4538   */\n    tag_207:\n        /* \"#utility.yul\":4566:4567   */\n      dup3\n        /* \"#utility.yul\":4563:4564   */\n      dup3\n        /* \"#utility.yul\":4559:4568   */\n      mul\n        /* \"#utility.yul\":4548:4568   */\n      swap1\n      pop\n        /* \"#utility.yul\":4226:4574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4580:4760   */\n    tag_139:\n        /* \"#utility.yul\":4628:4705   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4625:4626   */\n      0x00\n        /* \"#utility.yul\":4618:4706   */\n      mstore\n        /* \"#utility.yul\":4725:4729   */\n      0x12\n        /* \"#utility.yul\":4722:4723   */\n      0x04\n        /* \"#utility.yul\":4715:4730   */\n      mstore\n        /* \"#utility.yul\":4749:4753   */\n      0x24\n        /* \"#utility.yul\":4746:4747   */\n      0x00\n        /* \"#utility.yul\":4739:4754   */\n      revert\n        /* \"#utility.yul\":4766:4951   */\n    tag_67:\n        /* \"#utility.yul\":4806:4807   */\n      0x00\n        /* \"#utility.yul\":4823:4843   */\n      tag_211\n        /* \"#utility.yul\":4841:4842   */\n      dup3\n        /* \"#utility.yul\":4823:4843   */\n      tag_132\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4818:4843   */\n      swap2\n      pop\n        /* \"#utility.yul\":4857:4877   */\n      tag_212\n        /* \"#utility.yul\":4875:4876   */\n      dup4\n        /* \"#utility.yul\":4857:4877   */\n      tag_132\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4852:4877   */\n      swap3\n      pop\n        /* \"#utility.yul\":4896:4897   */\n      dup3\n        /* \"#utility.yul\":4886:4921   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":4901:4919   */\n      tag_214\n      tag_139\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4886:4921   */\n    tag_213:\n        /* \"#utility.yul\":4943:4944   */\n      dup3\n        /* \"#utility.yul\":4940:4941   */\n      dup3\n        /* \"#utility.yul\":4936:4945   */\n      div\n        /* \"#utility.yul\":4931:4945   */\n      swap1\n      pop\n        /* \"#utility.yul\":4766:4951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4957:5126   */\n    tag_140:\n        /* \"#utility.yul\":5041:5052   */\n      0x00\n        /* \"#utility.yul\":5075:5081   */\n      dup3\n        /* \"#utility.yul\":5070:5073   */\n      dup3\n        /* \"#utility.yul\":5063:5082   */\n      mstore\n        /* \"#utility.yul\":5115:5119   */\n      0x20\n        /* \"#utility.yul\":5110:5113   */\n      dup3\n        /* \"#utility.yul\":5106:5120   */\n      add\n        /* \"#utility.yul\":5091:5120   */\n      swap1\n      pop\n        /* \"#utility.yul\":4957:5126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5132:5314   */\n    tag_141:\n        /* \"#utility.yul\":5272:5306   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5260:5266   */\n      dup3\n        /* \"#utility.yul\":5256:5270   */\n      add\n        /* \"#utility.yul\":5249:5307   */\n      mstore\n        /* \"#utility.yul\":5132:5314   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5320:5686   */\n    tag_142:\n        /* \"#utility.yul\":5462:5465   */\n      0x00\n        /* \"#utility.yul\":5483:5550   */\n      tag_218\n        /* \"#utility.yul\":5547:5549   */\n      0x20\n        /* \"#utility.yul\":5542:5545   */\n      dup4\n        /* \"#utility.yul\":5483:5550   */\n      tag_140\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5476:5550   */\n      swap2\n      pop\n        /* \"#utility.yul\":5559:5652   */\n      tag_219\n        /* \"#utility.yul\":5648:5651   */\n      dup3\n        /* \"#utility.yul\":5559:5652   */\n      tag_141\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5677:5679   */\n      0x20\n        /* \"#utility.yul\":5672:5675   */\n      dup3\n        /* \"#utility.yul\":5668:5680   */\n      add\n        /* \"#utility.yul\":5661:5680   */\n      swap1\n      pop\n        /* \"#utility.yul\":5320:5686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5692:6111   */\n    tag_81:\n        /* \"#utility.yul\":5858:5862   */\n      0x00\n        /* \"#utility.yul\":5896:5898   */\n      0x20\n        /* \"#utility.yul\":5885:5894   */\n      dup3\n        /* \"#utility.yul\":5881:5899   */\n      add\n        /* \"#utility.yul\":5873:5899   */\n      swap1\n      pop\n        /* \"#utility.yul\":5945:5954   */\n      dup2\n        /* \"#utility.yul\":5939:5943   */\n      dup2\n        /* \"#utility.yul\":5935:5955   */\n      sub\n        /* \"#utility.yul\":5931:5932   */\n      0x00\n        /* \"#utility.yul\":5920:5929   */\n      dup4\n        /* \"#utility.yul\":5916:5933   */\n      add\n        /* \"#utility.yul\":5909:5956   */\n      mstore\n        /* \"#utility.yul\":5973:6104   */\n      tag_221\n        /* \"#utility.yul\":6099:6103   */\n      dup2\n        /* \"#utility.yul\":5973:6104   */\n      tag_142\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5965:6104   */\n      swap1\n      pop\n        /* \"#utility.yul\":5692:6111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6117:6342   */\n    tag_143:\n        /* \"#utility.yul\":6257:6291   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6253:6254   */\n      0x00\n        /* \"#utility.yul\":6245:6251   */\n      dup3\n        /* \"#utility.yul\":6241:6255   */\n      add\n        /* \"#utility.yul\":6234:6292   */\n      mstore\n        /* \"#utility.yul\":6326:6334   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6321:6323   */\n      0x20\n        /* \"#utility.yul\":6313:6319   */\n      dup3\n        /* \"#utility.yul\":6309:6324   */\n      add\n        /* \"#utility.yul\":6302:6335   */\n      mstore\n        /* \"#utility.yul\":6117:6342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6348:6714   */\n    tag_144:\n        /* \"#utility.yul\":6490:6493   */\n      0x00\n        /* \"#utility.yul\":6511:6578   */\n      tag_224\n        /* \"#utility.yul\":6575:6577   */\n      0x26\n        /* \"#utility.yul\":6570:6573   */\n      dup4\n        /* \"#utility.yul\":6511:6578   */\n      tag_140\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6504:6578   */\n      swap2\n      pop\n        /* \"#utility.yul\":6587:6680   */\n      tag_225\n        /* \"#utility.yul\":6676:6679   */\n      dup3\n        /* \"#utility.yul\":6587:6680   */\n      tag_143\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6705:6707   */\n      0x40\n        /* \"#utility.yul\":6700:6703   */\n      dup3\n        /* \"#utility.yul\":6696:6708   */\n      add\n        /* \"#utility.yul\":6689:6708   */\n      swap1\n      pop\n        /* \"#utility.yul\":6348:6714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6720:7139   */\n    tag_109:\n        /* \"#utility.yul\":6886:6890   */\n      0x00\n        /* \"#utility.yul\":6924:6926   */\n      0x20\n        /* \"#utility.yul\":6913:6922   */\n      dup3\n        /* \"#utility.yul\":6909:6927   */\n      add\n        /* \"#utility.yul\":6901:6927   */\n      swap1\n      pop\n        /* \"#utility.yul\":6973:6982   */\n      dup2\n        /* \"#utility.yul\":6967:6971   */\n      dup2\n        /* \"#utility.yul\":6963:6983   */\n      sub\n        /* \"#utility.yul\":6959:6960   */\n      0x00\n        /* \"#utility.yul\":6948:6957   */\n      dup4\n        /* \"#utility.yul\":6944:6961   */\n      add\n        /* \"#utility.yul\":6937:6984   */\n      mstore\n        /* \"#utility.yul\":7001:7132   */\n      tag_227\n        /* \"#utility.yul\":7127:7131   */\n      dup2\n        /* \"#utility.yul\":7001:7132   */\n      tag_144\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6993:7132   */\n      swap1\n      pop\n        /* \"#utility.yul\":6720:7139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7145:7292   */\n    tag_145:\n        /* \"#utility.yul\":7246:7257   */\n      0x00\n        /* \"#utility.yul\":7283:7286   */\n      dup2\n        /* \"#utility.yul\":7268:7286   */\n      swap1\n      pop\n        /* \"#utility.yul\":7145:7292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7298:7412   */\n    tag_146:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7418:7816   */\n    tag_147:\n        /* \"#utility.yul\":7577:7580   */\n      0x00\n        /* \"#utility.yul\":7598:7681   */\n      tag_231\n        /* \"#utility.yul\":7679:7680   */\n      0x00\n        /* \"#utility.yul\":7674:7677   */\n      dup4\n        /* \"#utility.yul\":7598:7681   */\n      tag_145\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7591:7681   */\n      swap2\n      pop\n        /* \"#utility.yul\":7690:7783   */\n      tag_232\n        /* \"#utility.yul\":7779:7782   */\n      dup3\n        /* \"#utility.yul\":7690:7783   */\n      tag_146\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7808:7809   */\n      0x00\n        /* \"#utility.yul\":7803:7806   */\n      dup3\n        /* \"#utility.yul\":7799:7810   */\n      add\n        /* \"#utility.yul\":7792:7810   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7822:8201   */\n    tag_115:\n        /* \"#utility.yul\":8006:8009   */\n      0x00\n        /* \"#utility.yul\":8028:8175   */\n      tag_234\n        /* \"#utility.yul\":8171:8174   */\n      dup3\n        /* \"#utility.yul\":8028:8175   */\n      tag_147\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8021:8175   */\n      swap2\n      pop\n        /* \"#utility.yul\":8192:8195   */\n      dup2\n        /* \"#utility.yul\":8185:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":7822:8201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8207:8429   */\n    tag_148:\n        /* \"#utility.yul\":8347:8381   */\n      0x5472616e7366657248656c7065723a20424e425f5452414e534645525f464149\n        /* \"#utility.yul\":8343:8344   */\n      0x00\n        /* \"#utility.yul\":8335:8341   */\n      dup3\n        /* \"#utility.yul\":8331:8345   */\n      add\n        /* \"#utility.yul\":8324:8382   */\n      mstore\n        /* \"#utility.yul\":8416:8421   */\n      0x4c45440000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8411:8413   */\n      0x20\n        /* \"#utility.yul\":8403:8409   */\n      dup3\n        /* \"#utility.yul\":8399:8414   */\n      add\n        /* \"#utility.yul\":8392:8422   */\n      mstore\n        /* \"#utility.yul\":8207:8429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8435:8801   */\n    tag_149:\n        /* \"#utility.yul\":8577:8580   */\n      0x00\n        /* \"#utility.yul\":8598:8665   */\n      tag_237\n        /* \"#utility.yul\":8662:8664   */\n      0x23\n        /* \"#utility.yul\":8657:8660   */\n      dup4\n        /* \"#utility.yul\":8598:8665   */\n      tag_140\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8591:8665   */\n      swap2\n      pop\n        /* \"#utility.yul\":8674:8767   */\n      tag_238\n        /* \"#utility.yul\":8763:8766   */\n      dup3\n        /* \"#utility.yul\":8674:8767   */\n      tag_148\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8792:8794   */\n      0x40\n        /* \"#utility.yul\":8787:8790   */\n      dup3\n        /* \"#utility.yul\":8783:8795   */\n      add\n        /* \"#utility.yul\":8776:8795   */\n      swap1\n      pop\n        /* \"#utility.yul\":8435:8801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8807:9226   */\n    tag_121:\n        /* \"#utility.yul\":8973:8977   */\n      0x00\n        /* \"#utility.yul\":9011:9013   */\n      0x20\n        /* \"#utility.yul\":9000:9009   */\n      dup3\n        /* \"#utility.yul\":8996:9014   */\n      add\n        /* \"#utility.yul\":8988:9014   */\n      swap1\n      pop\n        /* \"#utility.yul\":9060:9069   */\n      dup2\n        /* \"#utility.yul\":9054:9058   */\n      dup2\n        /* \"#utility.yul\":9050:9070   */\n      sub\n        /* \"#utility.yul\":9046:9047   */\n      0x00\n        /* \"#utility.yul\":9035:9044   */\n      dup4\n        /* \"#utility.yul\":9031:9048   */\n      add\n        /* \"#utility.yul\":9024:9071   */\n      mstore\n        /* \"#utility.yul\":9088:9219   */\n      tag_240\n        /* \"#utility.yul\":9214:9218   */\n      dup2\n        /* \"#utility.yul\":9088:9219   */\n      tag_149\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9080:9219   */\n      swap1\n      pop\n        /* \"#utility.yul\":8807:9226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122070bd7a900c1e6664efdc8dfaa87c913e60c07fbcd26018f4decfacd83a0ef4a964736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 57,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 65,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526201518060015534801561001757600080fd5b5061003461002961003960201b60201c565b61004160201b60201c565b610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610edb806101146000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100b2578063b3743586146100dd578063f2fde38b14610108578063fd5e6dd11461013157610070565b80633a4b66f11461007557806351cff8d91461007f578063715018a61461009b575b600080fd5b61007d610171565b005b610099600480360381019061009491906109d4565b6103db565b005b3480156100a757600080fd5b506100b0610506565b005b3480156100be57600080fd5b506100c761058e565b6040516100d49190610a10565b60405180910390f35b3480156100e957600080fd5b506100f26105b7565b6040516100ff9190610a44565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a91906109d4565b6106ad565b005b34801561013d57600080fd5b5061015860048036038101906101539190610a8b565b6107a4565b6040516101689493929190610ad7565b60405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036102b4576002604051806080016040528034815260200160008152602001600163ffffffff168152602001600154426101ed9190610b4b565b8152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff1602179055506060820151816003015550506000600280549050905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505061038b565b60006001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103029190610ba1565b9050346002828154811061031957610318610bd5565b5b906000526020600020906004020160000160008282546103399190610b4b565b925050819055506001544261034e9190610b4b565b6002828154811061036257610361610bd5565b5b906000526020600020906004020160030160008282546103829190610b4b565b92505081905550505b3373ffffffffffffffffffffffffffffffffffffffff167f6bd5a68a4a6cc22607f1514ca193faf12a458c6e5bdf1fdb7a736b2e813c25d9346040516103d19190610a44565b60405180910390a2565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104299190610ba1565b90506000606460036002848154811061044557610444610bd5565b5b9060005260206000209060040201600001546104619190610c04565b61046b9190610c8d565b9050806002838154811061048257610481610bd5565b5b906000526020600020906004020160010160008282546104a29190610b4b565b925050819055506104b333826107f4565b3373ffffffffffffffffffffffffffffffffffffffff167f5dba113b49cfa7c90315e8e604e6b506f7abcb909b01dcb19ec39005086e68fc826040516104f99190610a44565b60405180910390a2505050565b61050e6108a5565b73ffffffffffffffffffffffffffffffffffffffff1661052c61058e565b73ffffffffffffffffffffffffffffffffffffffff1614610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057990610d1b565b60405180910390fd5b61058c60006108ad565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106069190610ba1565b9050426002828154811061061d5761061c610bd5565b5b906000526020600020906004020160030154101561067657600154426106439190610b4b565b6002828154811061065757610656610bd5565b5b906000526020600020906004020160030181905550610675336103db565b5b6002818154811061068a57610689610bd5565b5b906000526020600020906004020160030154426106a79190610ba1565b91505090565b6106b56108a5565b73ffffffffffffffffffffffffffffffffffffffff166106d361058e565b73ffffffffffffffffffffffffffffffffffffffff1614610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610d1b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90610dad565b60405180910390fd5b6107a1816108ad565b50565b600281815481106107b457600080fd5b90600052602060002090600402016000915090508060000154908060010154908060020160009054906101000a900463ffffffff16908060030154905084565b60008273ffffffffffffffffffffffffffffffffffffffff168260405161081a90610dfe565b60006040518083038185875af1925050503d8060008114610857576040519150601f19603f3d011682016040523d82523d6000602084013e61085c565b606091505b50509050806108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089790610e85565b60405180910390fd5b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109a182610976565b9050919050565b6109b181610996565b81146109bc57600080fd5b50565b6000813590506109ce816109a8565b92915050565b6000602082840312156109ea576109e9610971565b5b60006109f8848285016109bf565b91505092915050565b610a0a81610996565b82525050565b6000602082019050610a256000830184610a01565b92915050565b6000819050919050565b610a3e81610a2b565b82525050565b6000602082019050610a596000830184610a35565b92915050565b610a6881610a2b565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b600060208284031215610aa157610aa0610971565b5b6000610aaf84828501610a76565b91505092915050565b600063ffffffff82169050919050565b610ad181610ab8565b82525050565b6000608082019050610aec6000830187610a35565b610af96020830186610a35565b610b066040830185610ac8565b610b136060830184610a35565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b5682610a2b565b9150610b6183610a2b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b9657610b95610b1c565b5b828201905092915050565b6000610bac82610a2b565b9150610bb783610a2b565b925082821015610bca57610bc9610b1c565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c0f82610a2b565b9150610c1a83610a2b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c5357610c52610b1c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c9882610a2b565b9150610ca383610a2b565b925082610cb357610cb2610c5e565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d05602083610cbe565b9150610d1082610ccf565b602082019050919050565b60006020820190508181036000830152610d3481610cf8565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d97602683610cbe565b9150610da282610d3b565b604082019050919050565b60006020820190508181036000830152610dc681610d8a565b9050919050565b600081905092915050565b50565b6000610de8600083610dcd565b9150610df382610dd8565b600082019050919050565b6000610e0982610ddb565b9150819050919050565b7f5472616e7366657248656c7065723a20424e425f5452414e534645525f46414960008201527f4c45440000000000000000000000000000000000000000000000000000000000602082015250565b6000610e6f602383610cbe565b9150610e7a82610e13565b604082019050919050565b60006020820190508181036000830152610e9e81610e62565b905091905056fea264697066735822122070bd7a900c1e6664efdc8dfaa87c913e60c07fbcd26018f4decfacd83a0ef4a964736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34 PUSH2 0x29 PUSH2 0x39 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x41 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x105 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEDB DUP1 PUSH2 0x114 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB3743586 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x131 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x171 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x506 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x2B4 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x319 JUMPI PUSH2 0x318 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x34E SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x362 JUMPI PUSH2 0x361 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6BD5A68A4A6CC22607F1514CA193FAF12A458C6E5BDF1FDB7A736B2E813C25D9 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x3 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x445 JUMPI PUSH2 0x444 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x46B SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x482 JUMPI PUSH2 0x481 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4B3 CALLER DUP3 PUSH2 0x7F4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DBA113B49CFA7C90315E8E604E6B506F7ABCB909B01DCB19EC39005086E68FC DUP3 PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x50E PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x52C PUSH2 0x58E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58C PUSH1 0x0 PUSH2 0x8AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x61D JUMPI PUSH2 0x61C PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO PUSH2 0x676 JUMPI PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x643 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x657 JUMPI PUSH2 0x656 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x675 CALLER PUSH2 0x3DB JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D3 PUSH2 0x58E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP1 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x8AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x81A SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x85C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP1 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A1 DUP3 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B1 DUP2 PUSH2 0x996 JUMP JUMPDEST DUP2 EQ PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9CE DUP2 PUSH2 0x9A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EA JUMPI PUSH2 0x9E9 PUSH2 0x971 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9F8 DUP5 DUP3 DUP6 ADD PUSH2 0x9BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0x996 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3E DUP2 PUSH2 0xA2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA68 DUP2 PUSH2 0xA2B JUMP JUMPDEST DUP2 EQ PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA85 DUP2 PUSH2 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA1 JUMPI PUSH2 0xAA0 PUSH2 0x971 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAAF DUP5 DUP3 DUP6 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD1 DUP2 PUSH2 0xAB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xAEC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xAF9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xB06 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xB13 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xA35 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB56 DUP3 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xB61 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB95 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAC DUP3 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xBB7 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBC9 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC0F DUP3 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xC1A DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP3 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xCA3 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0xC5E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 PUSH1 0x20 DUP4 PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP PUSH2 0xD10 DUP3 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD34 DUP2 PUSH2 0xCF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD97 PUSH1 0x26 DUP4 PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP PUSH2 0xDA2 DUP3 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDC6 DUP2 PUSH2 0xD8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE8 PUSH1 0x0 DUP4 PUSH2 0xDCD JUMP JUMPDEST SWAP2 POP PUSH2 0xDF3 DUP3 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE09 DUP3 PUSH2 0xDDB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A20424E425F5452414E534645525F464149 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4C45440000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6F PUSH1 0x23 DUP4 PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP PUSH2 0xE7A DUP3 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE9E DUP2 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xBD7A900C1E6664EFDC8DFAA87C913E60C0 PUSH32 0xBCD26018F4DECFACD83A0EF4A964736F6C634300080E00330000000000000000 ",
							"sourceMap": "367:2083:2:-:0;;;782:6;759:29;;367:2083;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;367:2083:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;367:2083:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_116": {
									"entryPoint": 2213,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransferBNB_195": {
									"entryPoint": 2036,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 2221,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 1422,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainedTime_319": {
									"entryPoint": 1463,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1286,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_272": {
									"entryPoint": 369,
									"id": 272,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakers_169": {
									"entryPoint": 1956,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 1709,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_366": {
									"entryPoint": 987,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint32_t_uint256__to_t_uint256_t_uint256_t_uint32_t_uint256__fromStack_reversed": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9229:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:7",
														"type": ""
													}
												],
												"src": "1176:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:7",
														"type": ""
													}
												],
												"src": "1300:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1583:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1594:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1583:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1555:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1565:7:7",
														"type": ""
													}
												],
												"src": "1528:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:7",
														"type": ""
													}
												],
												"src": "1611:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:7",
														"type": ""
													}
												],
												"src": "1735:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2063:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:43:7"
															},
															"nodeType": "YulIf",
															"src": "2016:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1999:5:7",
														"type": ""
													}
												],
												"src": "1963:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2143:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2153:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2121:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2129:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:7",
														"type": ""
													}
												],
												"src": "2091:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2348:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:7"
															},
															"nodeType": "YulIf",
															"src": "2312:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2441:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2485:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2272:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2283:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2295:6:7",
														"type": ""
													}
												],
												"src": "2236:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2615:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2625:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2647:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2597:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2607:7:7",
														"type": ""
													}
												],
												"src": "2571:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2733:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2750:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2772:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "2755:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2755:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2743:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2743:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2721:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2728:3:7",
														"type": ""
													}
												],
												"src": "2670:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:369:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2981:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2993:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3004:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2989:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2989:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2981:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3062:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3075:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3086:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3071:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3071:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3018:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3018:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3143:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3156:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3167:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3152:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3152:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3099:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3099:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3223:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3236:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3247:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3181:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:70:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3181:70:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3305:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3318:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3329:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3314:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3261:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3261:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint32_t_uint256__to_t_uint256_t_uint256_t_uint32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2919:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2931:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2939:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2947:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2955:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2966:4:7",
														"type": ""
													}
												],
												"src": "2791:549:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3374:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3391:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3394:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3384:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3384:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3488:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3481:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3515:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3505:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3505:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3505:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3346:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3576:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3586:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3609:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3591:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3591:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3586:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3620:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3643:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3625:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3620:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3783:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3785:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3785:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3785:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3704:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3711:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3779:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3707:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3707:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:81:7"
															},
															"nodeType": "YulIf",
															"src": "3698:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3815:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3826:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3829:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3822:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3822:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3815:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3563:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3566:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3572:3:7",
														"type": ""
													}
												],
												"src": "3532:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3888:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3898:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3921:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3903:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3903:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3898:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3932:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3955:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3937:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3937:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3932:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3981:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3981:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3973:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3976:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3970:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:8:7"
															},
															"nodeType": "YulIf",
															"src": "3967:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4011:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4023:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4026:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4019:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4011:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3874:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3877:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3883:4:7",
														"type": ""
													}
												],
												"src": "3843:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4068:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4085:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4078:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4078:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4182:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4185:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4175:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4175:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4206:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4209:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4199:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4040:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4274:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4284:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4307:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4289:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4289:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4284:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4318:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4341:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4323:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4318:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4516:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4518:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4518:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4518:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4428:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4421:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4421:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4414:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4414:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4436:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4443:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4511:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4439:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4439:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4433:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4433:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4410:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4410:105:7"
															},
															"nodeType": "YulIf",
															"src": "4407:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4548:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4563:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4566:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4559:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4559:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4548:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4257:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4260:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4266:7:7",
														"type": ""
													}
												],
												"src": "4226:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4608:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4628:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4618:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4618:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4746:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4749:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4739:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4739:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4739:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4580:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4808:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4818:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4841:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4823:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4818:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4852:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4875:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4857:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4852:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4899:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4901:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4901:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4901:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4896:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4889:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:9:7"
															},
															"nodeType": "YulIf",
															"src": "4886:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4931:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4940:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4943:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4936:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4936:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4931:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4797:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4800:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4806:1:7",
														"type": ""
													}
												],
												"src": "4766:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5053:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5070:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5075:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5063:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5063:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5063:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5091:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5110:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5115:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5106:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5106:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5091:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5025:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5030:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5041:11:7",
														"type": ""
													}
												],
												"src": "4957:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5238:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5260:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5268:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5256:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5256:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5272:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5249:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5249:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5249:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5230:6:7",
														"type": ""
													}
												],
												"src": "5132:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5466:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5476:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5542:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5547:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5483:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5483:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5476:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5648:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5559:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5559:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5559:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5661:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5672:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5677:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5668:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5454:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5462:3:7",
														"type": ""
													}
												],
												"src": "5320:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5873:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5885:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5881:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5873:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5931:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5939:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5945:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5909:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5909:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5965:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6099:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5973:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5965:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5843:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5858:4:7",
														"type": ""
													}
												],
												"src": "5692:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6223:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6245:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6253:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6241:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6241:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6257:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6234:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6234:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6234:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6313:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6321:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6309:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6326:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6302:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6302:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6302:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6215:6:7",
														"type": ""
													}
												],
												"src": "6117:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6494:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6504:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6570:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6575:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6511:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6511:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6504:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6676:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "6587:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6587:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6689:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6705:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6696:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6696:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6689:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6482:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6490:3:7",
														"type": ""
													}
												],
												"src": "6348:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6891:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6901:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6913:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6924:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6909:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6909:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6901:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6948:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6959:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6944:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6944:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6967:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6973:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6963:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6963:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6937:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6937:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6993:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7127:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7001:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6993:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6871:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6886:4:7",
														"type": ""
													}
												],
												"src": "6720:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7258:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7268:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7283:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7268:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7230:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7235:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7246:11:7",
														"type": ""
													}
												],
												"src": "7145:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7404:8:7",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7396:6:7",
														"type": ""
													}
												],
												"src": "7298:114:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7581:235:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7591:90:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7674:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7598:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7598:83:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7591:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7779:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "7690:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7690:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7690:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7792:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7803:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7808:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7799:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7799:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7792:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7569:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7577:3:7",
														"type": ""
													}
												],
												"src": "7418:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8010:191:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8021:154:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8028:141:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8028:147:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8021:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8185:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8192:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8185:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7997:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8006:3:7",
														"type": ""
													}
												],
												"src": "7822:379:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8313:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8335:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8343:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8331:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8331:14:7"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a20424e425f5452414e534645525f464149",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8347:34:7",
																		"type": "",
																		"value": "TransferHelper: BNB_TRANSFER_FAI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8324:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8324:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8324:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8403:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8411:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8399:15:7"
																	},
																	{
																		"hexValue": "4c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8416:5:7",
																		"type": "",
																		"value": "LED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8392:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8392:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8392:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8305:6:7",
														"type": ""
													}
												],
												"src": "8207:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8581:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8591:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8657:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8662:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8598:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8598:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8591:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8763:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8",
																	"nodeType": "YulIdentifier",
																	"src": "8674:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8674:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8674:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8776:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8787:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8792:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8783:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8783:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8776:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8569:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8577:3:7",
														"type": ""
													}
												],
												"src": "8435:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8978:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8988:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9000:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9011:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8996:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8996:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8988:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9035:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9046:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9031:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9031:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9054:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9060:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9050:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9050:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9024:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9080:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9214:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9088:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9088:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9080:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8958:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8973:4:7",
														"type": ""
													}
												],
												"src": "8807:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint32_t_uint256__to_t_uint256_t_uint256_t_uint32_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper: BNB_TRANSFER_FAI\")\n\n        mstore(add(memPtr, 32), \"LED\")\n\n    }\n\n    function abi_encode_t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100b2578063b3743586146100dd578063f2fde38b14610108578063fd5e6dd11461013157610070565b80633a4b66f11461007557806351cff8d91461007f578063715018a61461009b575b600080fd5b61007d610171565b005b610099600480360381019061009491906109d4565b6103db565b005b3480156100a757600080fd5b506100b0610506565b005b3480156100be57600080fd5b506100c761058e565b6040516100d49190610a10565b60405180910390f35b3480156100e957600080fd5b506100f26105b7565b6040516100ff9190610a44565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a91906109d4565b6106ad565b005b34801561013d57600080fd5b5061015860048036038101906101539190610a8b565b6107a4565b6040516101689493929190610ad7565b60405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036102b4576002604051806080016040528034815260200160008152602001600163ffffffff168152602001600154426101ed9190610b4b565b8152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff1602179055506060820151816003015550506000600280549050905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505061038b565b60006001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103029190610ba1565b9050346002828154811061031957610318610bd5565b5b906000526020600020906004020160000160008282546103399190610b4b565b925050819055506001544261034e9190610b4b565b6002828154811061036257610361610bd5565b5b906000526020600020906004020160030160008282546103829190610b4b565b92505081905550505b3373ffffffffffffffffffffffffffffffffffffffff167f6bd5a68a4a6cc22607f1514ca193faf12a458c6e5bdf1fdb7a736b2e813c25d9346040516103d19190610a44565b60405180910390a2565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104299190610ba1565b90506000606460036002848154811061044557610444610bd5565b5b9060005260206000209060040201600001546104619190610c04565b61046b9190610c8d565b9050806002838154811061048257610481610bd5565b5b906000526020600020906004020160010160008282546104a29190610b4b565b925050819055506104b333826107f4565b3373ffffffffffffffffffffffffffffffffffffffff167f5dba113b49cfa7c90315e8e604e6b506f7abcb909b01dcb19ec39005086e68fc826040516104f99190610a44565b60405180910390a2505050565b61050e6108a5565b73ffffffffffffffffffffffffffffffffffffffff1661052c61058e565b73ffffffffffffffffffffffffffffffffffffffff1614610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057990610d1b565b60405180910390fd5b61058c60006108ad565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106069190610ba1565b9050426002828154811061061d5761061c610bd5565b5b906000526020600020906004020160030154101561067657600154426106439190610b4b565b6002828154811061065757610656610bd5565b5b906000526020600020906004020160030181905550610675336103db565b5b6002818154811061068a57610689610bd5565b5b906000526020600020906004020160030154426106a79190610ba1565b91505090565b6106b56108a5565b73ffffffffffffffffffffffffffffffffffffffff166106d361058e565b73ffffffffffffffffffffffffffffffffffffffff1614610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610d1b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90610dad565b60405180910390fd5b6107a1816108ad565b50565b600281815481106107b457600080fd5b90600052602060002090600402016000915090508060000154908060010154908060020160009054906101000a900463ffffffff16908060030154905084565b60008273ffffffffffffffffffffffffffffffffffffffff168260405161081a90610dfe565b60006040518083038185875af1925050503d8060008114610857576040519150601f19603f3d011682016040523d82523d6000602084013e61085c565b606091505b50509050806108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089790610e85565b60405180910390fd5b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109a182610976565b9050919050565b6109b181610996565b81146109bc57600080fd5b50565b6000813590506109ce816109a8565b92915050565b6000602082840312156109ea576109e9610971565b5b60006109f8848285016109bf565b91505092915050565b610a0a81610996565b82525050565b6000602082019050610a256000830184610a01565b92915050565b6000819050919050565b610a3e81610a2b565b82525050565b6000602082019050610a596000830184610a35565b92915050565b610a6881610a2b565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b600060208284031215610aa157610aa0610971565b5b6000610aaf84828501610a76565b91505092915050565b600063ffffffff82169050919050565b610ad181610ab8565b82525050565b6000608082019050610aec6000830187610a35565b610af96020830186610a35565b610b066040830185610ac8565b610b136060830184610a35565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b5682610a2b565b9150610b6183610a2b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b9657610b95610b1c565b5b828201905092915050565b6000610bac82610a2b565b9150610bb783610a2b565b925082821015610bca57610bc9610b1c565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c0f82610a2b565b9150610c1a83610a2b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c5357610c52610b1c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c9882610a2b565b9150610ca383610a2b565b925082610cb357610cb2610c5e565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d05602083610cbe565b9150610d1082610ccf565b602082019050919050565b60006020820190508181036000830152610d3481610cf8565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d97602683610cbe565b9150610da282610d3b565b604082019050919050565b60006020820190508181036000830152610dc681610d8a565b9050919050565b600081905092915050565b50565b6000610de8600083610dcd565b9150610df382610dd8565b600082019050919050565b6000610e0982610ddb565b9150819050919050565b7f5472616e7366657248656c7065723a20424e425f5452414e534645525f46414960008201527f4c45440000000000000000000000000000000000000000000000000000000000602082015250565b6000610e6f602383610cbe565b9150610e7a82610e13565b604082019050919050565b60006020820190508181036000830152610e9e81610e62565b905091905056fea264697066735822122070bd7a900c1e6664efdc8dfaa87c913e60c07fbcd26018f4decfacd83a0ef4a964736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB3743586 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x131 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x171 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x506 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x2B4 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x319 JUMPI PUSH2 0x318 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x34E SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x362 JUMPI PUSH2 0x361 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6BD5A68A4A6CC22607F1514CA193FAF12A458C6E5BDF1FDB7A736B2E813C25D9 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x3 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x445 JUMPI PUSH2 0x444 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x46B SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x482 JUMPI PUSH2 0x481 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4B3 CALLER DUP3 PUSH2 0x7F4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DBA113B49CFA7C90315E8E604E6B506F7ABCB909B01DCB19EC39005086E68FC DUP3 PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x50E PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x52C PUSH2 0x58E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58C PUSH1 0x0 PUSH2 0x8AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x61D JUMPI PUSH2 0x61C PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO PUSH2 0x676 JUMPI PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x643 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x657 JUMPI PUSH2 0x656 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x675 CALLER PUSH2 0x3DB JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D3 PUSH2 0x58E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP1 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x8AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x81A SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x85C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP1 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A1 DUP3 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B1 DUP2 PUSH2 0x996 JUMP JUMPDEST DUP2 EQ PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9CE DUP2 PUSH2 0x9A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EA JUMPI PUSH2 0x9E9 PUSH2 0x971 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9F8 DUP5 DUP3 DUP6 ADD PUSH2 0x9BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0x996 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3E DUP2 PUSH2 0xA2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA68 DUP2 PUSH2 0xA2B JUMP JUMPDEST DUP2 EQ PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA85 DUP2 PUSH2 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA1 JUMPI PUSH2 0xAA0 PUSH2 0x971 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAAF DUP5 DUP3 DUP6 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD1 DUP2 PUSH2 0xAB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xAEC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xAF9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xB06 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xB13 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xA35 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB56 DUP3 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xB61 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB95 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAC DUP3 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xBB7 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBC9 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC0F DUP3 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xC1A DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP3 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xCA3 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0xC5E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 PUSH1 0x20 DUP4 PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP PUSH2 0xD10 DUP3 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD34 DUP2 PUSH2 0xCF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD97 PUSH1 0x26 DUP4 PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP PUSH2 0xDA2 DUP3 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDC6 DUP2 PUSH2 0xD8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE8 PUSH1 0x0 DUP4 PUSH2 0xDCD JUMP JUMPDEST SWAP2 POP PUSH2 0xDF3 DUP3 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE09 DUP3 PUSH2 0xDDB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A20424E425F5452414E534645525F464149 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4C45440000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6F PUSH1 0x23 DUP4 PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP PUSH2 0xE7A DUP3 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE9E DUP2 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xBD7A900C1E6664EFDC8DFAA87C913E60C0 PUSH32 0xBCD26018F4DECFACD83A0EF4A964736F6C634300080E00330000000000000000 ",
							"sourceMap": "367:2083:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:620;;;:::i;:::-;;2097:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1717:372:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;801:24:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1089:620;1227:1;1200:11;:23;1212:10;1200:23;;;;;;;;;;;;;;;;:28;1197:436;;1245:7;1258:54;;;;;;;;1266:9;1258:54;;;;1277:1;1258:54;;;;1280:1;1258:54;;;;;;1299:12;;1283:15;:28;;;;:::i;:::-;1258:54;;;1245:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1328:14;1345:7;:14;;;;1328:31;;1400:6;1374:11;:23;1386:10;1374:23;;;;;;;;;;;;;;;:32;;;;1230:188;1197:436;;;1448:14;1491:1;1465:11;:23;1477:10;1465:23;;;;;;;;;;;;;;;;:27;;;;:::i;:::-;1448:44;;1539:9;1507:7;1515:6;1507:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;:41;;;;;;;:::i;:::-;;;;;;;;1609:12;;1593:15;:28;;;;:::i;:::-;1563:7;1571:6;1563:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:26;;;:58;;;;;;;:::i;:::-;;;;;;;;1433:200;1197:436;1678:10;1658:43;;;1691:9;1658:43;;;;;;:::i;:::-;;;;;;;;1089:620::o;2097:348::-;2159:14;2199:1;2176:11;:20;2188:7;2176:20;;;;;;;;;;;;;;;;:24;;;;:::i;:::-;2159:41;;2211:14;2263:3;2259:1;2228:7;2236:6;2228:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;:32;;;;:::i;:::-;:38;;;;:::i;:::-;2211:55;;2316:6;2279:7;2287:6;2279:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;;:43;;;;;;;:::i;:::-;;;;;;;;2343:45;2368:10;2381:6;2343:16;:45::i;:::-;2418:10;2404:33;;;2430:6;2404:33;;;;;;:::i;:::-;;;;;;;;2146:299;;2097:348;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1717:372:2:-;1757:7;1787:14;1830:1;1804:11;:23;1816:10;1804:23;;;;;;;;;;;;;;;;:27;;;;:::i;:::-;1787:44;;1876:15;1847:7;1855:6;1847:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:26;;;:44;1844:174;;;1957:12;;1939:15;:30;;;;:::i;:::-;1910:7;1918:6;1910:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:26;;:59;;;;1986:20;1995:10;1986:8;:20::i;:::-;1844:174;2055:7;2063:6;2055:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:26;;;2037:15;:44;;;;:::i;:::-;2030:51;;;1717:372;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;801:24:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;890:191::-;964:12;982:2;:7;;997:5;982:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:44;;;1026:7;1018:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;952:129;890:191;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:77::-;1565:7;1594:5;1583:16;;1528:77;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:93::-;2607:7;2647:10;2640:5;2636:22;2625:33;;2571:93;;;:::o;2670:115::-;2755:23;2772:5;2755:23;:::i;:::-;2750:3;2743:36;2670:115;;:::o;2791:549::-;2966:4;3004:3;2993:9;2989:19;2981:27;;3018:71;3086:1;3075:9;3071:17;3062:6;3018:71;:::i;:::-;3099:72;3167:2;3156:9;3152:18;3143:6;3099:72;:::i;:::-;3181:70;3247:2;3236:9;3232:18;3223:6;3181:70;:::i;:::-;3261:72;3329:2;3318:9;3314:18;3305:6;3261:72;:::i;:::-;2791:549;;;;;;;:::o;3346:180::-;3394:77;3391:1;3384:88;3491:4;3488:1;3481:15;3515:4;3512:1;3505:15;3532:305;3572:3;3591:20;3609:1;3591:20;:::i;:::-;3586:25;;3625:20;3643:1;3625:20;:::i;:::-;3620:25;;3779:1;3711:66;3707:74;3704:1;3701:81;3698:107;;;3785:18;;:::i;:::-;3698:107;3829:1;3826;3822:9;3815:16;;3532:305;;;;:::o;3843:191::-;3883:4;3903:20;3921:1;3903:20;:::i;:::-;3898:25;;3937:20;3955:1;3937:20;:::i;:::-;3932:25;;3976:1;3973;3970:8;3967:34;;;3981:18;;:::i;:::-;3967:34;4026:1;4023;4019:9;4011:17;;3843:191;;;;:::o;4040:180::-;4088:77;4085:1;4078:88;4185:4;4182:1;4175:15;4209:4;4206:1;4199:15;4226:348;4266:7;4289:20;4307:1;4289:20;:::i;:::-;4284:25;;4323:20;4341:1;4323:20;:::i;:::-;4318:25;;4511:1;4443:66;4439:74;4436:1;4433:81;4428:1;4421:9;4414:17;4410:105;4407:131;;;4518:18;;:::i;:::-;4407:131;4566:1;4563;4559:9;4548:20;;4226:348;;;;:::o;4580:180::-;4628:77;4625:1;4618:88;4725:4;4722:1;4715:15;4749:4;4746:1;4739:15;4766:185;4806:1;4823:20;4841:1;4823:20;:::i;:::-;4818:25;;4857:20;4875:1;4857:20;:::i;:::-;4852:25;;4896:1;4886:35;;4901:18;;:::i;:::-;4886:35;4943:1;4940;4936:9;4931:14;;4766:185;;;;:::o;4957:169::-;5041:11;5075:6;5070:3;5063:19;5115:4;5110:3;5106:14;5091:29;;4957:169;;;;:::o;5132:182::-;5272:34;5268:1;5260:6;5256:14;5249:58;5132:182;:::o;5320:366::-;5462:3;5483:67;5547:2;5542:3;5483:67;:::i;:::-;5476:74;;5559:93;5648:3;5559:93;:::i;:::-;5677:2;5672:3;5668:12;5661:19;;5320:366;;;:::o;5692:419::-;5858:4;5896:2;5885:9;5881:18;5873:26;;5945:9;5939:4;5935:20;5931:1;5920:9;5916:17;5909:47;5973:131;6099:4;5973:131;:::i;:::-;5965:139;;5692:419;;;:::o;6117:225::-;6257:34;6253:1;6245:6;6241:14;6234:58;6326:8;6321:2;6313:6;6309:15;6302:33;6117:225;:::o;6348:366::-;6490:3;6511:67;6575:2;6570:3;6511:67;:::i;:::-;6504:74;;6587:93;6676:3;6587:93;:::i;:::-;6705:2;6700:3;6696:12;6689:19;;6348:366;;;:::o;6720:419::-;6886:4;6924:2;6913:9;6909:18;6901:26;;6973:9;6967:4;6963:20;6959:1;6948:9;6944:17;6937:47;7001:131;7127:4;7001:131;:::i;:::-;6993:139;;6720:419;;;:::o;7145:147::-;7246:11;7283:3;7268:18;;7145:147;;;;:::o;7298:114::-;;:::o;7418:398::-;7577:3;7598:83;7679:1;7674:3;7598:83;:::i;:::-;7591:90;;7690:93;7779:3;7690:93;:::i;:::-;7808:1;7803:3;7799:11;7792:18;;7418:398;;;:::o;7822:379::-;8006:3;8028:147;8171:3;8028:147;:::i;:::-;8021:154;;8192:3;8185:10;;7822:379;;;:::o;8207:222::-;8347:34;8343:1;8335:6;8331:14;8324:58;8416:5;8411:2;8403:6;8399:15;8392:30;8207:222;:::o;8435:366::-;8577:3;8598:67;8662:2;8657:3;8598:67;:::i;:::-;8591:74;;8674:93;8763:3;8674:93;:::i;:::-;8792:2;8787:3;8783:12;8776:19;;8435:366;;;:::o;8807:419::-;8973:4;9011:2;9000:9;8996:18;8988:26;;9060:9;9054:4;9050:20;9046:1;9035:9;9031:17;9024:47;9088:131;9214:4;9088:131;:::i;:::-;9080:139;;8807:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "760600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2522",
								"remainedTime()": "infinite",
								"renounceOwnership()": "30419",
								"stake()": "infinite",
								"stakers(uint256)": "infinite",
								"transferOwnership(address)": "30764",
								"withdraw(address)": "infinite"
							},
							"internal": {
								"_safeTransferBNB(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 782,
									"end": 788,
									"name": "PUSH",
									"source": 2,
									"value": "15180"
								},
								{
									"begin": 759,
									"end": 788,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 759,
									"end": 788,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 2450,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070bd7a900c1e6664efdc8dfaa87c913e60c07fbcd26018f4decfacd83a0ef4a964736f6c634300080e0033",
									".code": [
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "B3743586"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "FD5E6DD1"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "3A4B66F1"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "51CFF8D9"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 367,
											"end": 2450,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1089,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2097,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2097,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1717,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1717,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 801,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 801,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 801,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 801,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1089,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1222,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1197,
											"end": 1633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1252,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1275,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1283,
											"end": 1311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1345,
											"end": 1359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1359,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1385,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1396,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1197,
											"end": 1633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1633,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1197,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1487,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1465,
											"end": 1492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1465,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1492,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1465,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1548,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1515,
											"end": 1521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1507,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1507,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1609,
											"end": 1621,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1593,
											"end": 1621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1593,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1621,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1593,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1563,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1563,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1633,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1197,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1688,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "PUSH",
											"source": 2,
											"value": "6BD5A68A4A6CC22607F1514CA193FAF12A458C6E5BDF1FDB7A736B2E813C25D9"
										},
										{
											"begin": 1691,
											"end": 1700,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1658,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1701,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2176,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2176,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2228,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2228,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2256,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2228,
											"end": 2260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2228,
											"end": 2260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2260,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2228,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2228,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2279,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2279,
											"end": 2312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2279,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2343,
											"end": 2388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2343,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "5DBA113B49CFA7C90315E8E604E6B506F7ABCB909B01DCB19EC39005086E68FC"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2404,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1804,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1826,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1804,
											"end": 1831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1804,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1831,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1804,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1787,
											"end": 1831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1787,
											"end": 1831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1891,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1855,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1847,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1873,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1847,
											"end": 1873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1873,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1891,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 2018,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1844,
											"end": 2018,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1954,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1939,
											"end": 1969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1939,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1969,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1939,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1917,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1918,
											"end": 1924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1910,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1910,
											"end": 1936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1986,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 2018,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1844,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2063,
											"end": 2069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2055,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2081,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2055,
											"end": 2081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2081,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2052,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2037,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1998,
											"end": 2071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 801,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 801,
											"end": 825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 890,
											"end": 1081,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 890,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 984,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 982,
											"end": 989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 982,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 963,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 963,
											"end": 1007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 963,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1018,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1018,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 890,
											"end": 1081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 890,
											"end": 1081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 890,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2664,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2571,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2657,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2625,
											"end": 2658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2625,
											"end": 2658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2785,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2670,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2755,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2970,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3007,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 3008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 3008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3084,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3068,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3018,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3089,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3018,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3149,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3099,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3171,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3099,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3236,
											"end": 3245,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3229,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3181,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3251,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3181,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3318,
											"end": 3327,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3311,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3261,
											"end": 3333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3261,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3346,
											"end": 3526,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3346,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3471,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3491,
											"end": 3495,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3481,
											"end": 3496,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3519,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3512,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3520,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3837,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3532,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3609,
											"end": 3610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3591,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3625,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 3645,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3625,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3711,
											"end": 3777,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3707,
											"end": 3781,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3782,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3805,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3698,
											"end": 3805,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3785,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3805,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3698,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3830,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3837,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3837,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 4034,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3843,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3921,
											"end": 3922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3903,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3923,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3903,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3955,
											"end": 3956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3937,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3957,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3937,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3957,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 4001,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3967,
											"end": 4001,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3981,
											"end": 3999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 4001,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3967,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4028,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 4034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 4034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 4034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 4034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4040,
											"end": 4220,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4040,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4165,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4182,
											"end": 4183,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4175,
											"end": 4190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4213,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4206,
											"end": 4207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4574,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4307,
											"end": 4308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4289,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4323,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4343,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4323,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4509,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4439,
											"end": 4513,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4437,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4514,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4431,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4410,
											"end": 4515,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4538,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4407,
											"end": 4538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4518,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4538,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4407,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4574,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4760,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4580,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4705,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4625,
											"end": 4626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4729,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4715,
											"end": 4730,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4753,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4754,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4951,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4766,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4841,
											"end": 4842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4823,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4875,
											"end": 4876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4857,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4886,
											"end": 4921,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4901,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4901,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4919,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4901,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4921,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4886,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4945,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4951,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 5126,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4957,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5081,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5115,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5110,
											"end": 5113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 5126,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 5126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 5126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 5126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 5126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5314,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5132,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5272,
											"end": 5306,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5307,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5686,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5320,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5462,
											"end": 5465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5547,
											"end": 5549,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5483,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5483,
											"end": 5550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5483,
											"end": 5550,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5483,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5648,
											"end": 5651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5559,
											"end": 5652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5652,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5559,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5677,
											"end": 5679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5668,
											"end": 5680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5661,
											"end": 5680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5661,
											"end": 5680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 6111,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5692,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5935,
											"end": 5955,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5931,
											"end": 5932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5929,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 5956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6099,
											"end": 6103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5973,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6104,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5973,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 6104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 6104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 6111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 6111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 6111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 6111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6342,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6117,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6291,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6241,
											"end": 6255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6292,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6334,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6321,
											"end": 6323,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6313,
											"end": 6319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6309,
											"end": 6324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6714,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6348,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6575,
											"end": 6577,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6570,
											"end": 6573,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 6511,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6578,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6511,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6504,
											"end": 6578,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6504,
											"end": 6578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6587,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6676,
											"end": 6679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6587,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6587,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6587,
											"end": 6680,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6587,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6707,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 7139,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6720,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6886,
											"end": 6890,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6924,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6901,
											"end": 6927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6901,
											"end": 6927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 6982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6971,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 6983,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6957,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6937,
											"end": 6984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7001,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7132,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 7001,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 7139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 7139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 7139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 7139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7292,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7145,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7292,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7412,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7298,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7816,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7418,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7679,
											"end": 7680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7674,
											"end": 7677,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7598,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7681,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7598,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7690,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7779,
											"end": 7782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7690,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7690,
											"end": 7783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7690,
											"end": 7783,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7690,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7803,
											"end": 7806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 8201,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 7822,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8009,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8028,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8175,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8028,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 8201,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 8201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 8201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 8201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8429,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8207,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E7366657248656C7065723A20424E425F5452414E534645525F464149"
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8331,
											"end": 8345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8324,
											"end": 8382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8416,
											"end": 8421,
											"name": "PUSH",
											"source": 7,
											"value": "4C45440000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8413,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8403,
											"end": 8409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8392,
											"end": 8422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8801,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8435,
											"end": 8801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8598,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8662,
											"end": 8664,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 8657,
											"end": 8660,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8598,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 8598,
											"end": 8665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8598,
											"end": 8665,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8598,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8591,
											"end": 8665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8591,
											"end": 8665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8763,
											"end": 8766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8674,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8767,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8674,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 8794,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8787,
											"end": 8790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 8807,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 8977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9000,
											"end": 9009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8996,
											"end": 9014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8988,
											"end": 9014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8988,
											"end": 9014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9060,
											"end": 9069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9050,
											"end": 9070,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9088,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 9214,
											"end": 9218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9088,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 9088,
											"end": 9219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9088,
											"end": 9219,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 9088,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 9226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Maxim/BStakeSystem.sol",
								"Maxim/lib/Address.sol",
								"Maxim/lib/IBEP20.sol",
								"Maxim/lib/SafeBEP20.sol",
								"Maxim/lib/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"remainedTime()": "b3743586",
							"renounceOwnership()": "715018a6",
							"stake()": "3a4b66f1",
							"stakers(uint256)": "fd5e6dd1",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"rewardTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Maxim/BStakeSystem.sol\":\"BStakeSystem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Maxim/BStakeSystem.sol\":{\"keccak256\":\"0x1134faca9f366dfa86474851b430bac24e30a0517582b7b5a86eb38f8ac5e581\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://5571d47014313cf3feff1255e8fc9cba64b279873a0ba3d865d4676f2273313d\",\"dweb:/ipfs/QmUPibH9JxCQ5f5kuZJWwaesWvUZBxzGHRKwP9Wx2cf61k\"]},\"Maxim/lib/Address.sol\":{\"keccak256\":\"0xd430c69966dd69b65fc487cb8b76dc796a3a9acee90910990f6787c646393671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1b8caff628d78f37052533eb038576a876089f82a141d2fb3aa28b4c730e9a\",\"dweb:/ipfs/QmatB7MZQ1uypNt3jCJH33HjJXjvN9HoS868VjAm9N2Byo\"]},\"Maxim/lib/IBEP20.sol\":{\"keccak256\":\"0x8cac4738a0b00bd1b06b333eb423e0d77a9d70f86576cbab3a4ca01b8773ebf3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35d0231ddf8926dd89b14fcfe2a6ae1c0821ab38178653dc6083e019b2fb6ee9\",\"dweb:/ipfs/QmSh1aEz5BLvsr6Zt8qjV2ZA9EfSUXTGX3PJ49aVgxoSPT\"]},\"Maxim/lib/SafeBEP20.sol\":{\"keccak256\":\"0x2cec3c890138f843ede6c88f9f8c7b9474837714dac9f4fe7add01374fb7740b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3dd61205d6c69b52241c46202116849ac4d54f70845eb8f73b88bb22835d129\",\"dweb:/ipfs/QmYjHcnbYvd3qwMFSo2K1GdVQBHaQBjrsabotTyqh4jKFY\"]},\"Maxim/lib/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Maxim/BStakeSystem.sol:BStakeSystem",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 165,
								"contract": "Maxim/BStakeSystem.sol:BStakeSystem",
								"label": "cooldownTime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "Maxim/BStakeSystem.sol:BStakeSystem",
								"label": "stakers",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Stake_t)162_storage)dyn_storage"
							},
							{
								"astId": 173,
								"contract": "Maxim/BStakeSystem.sol:BStakeSystem",
								"label": "_userDetail",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stake_t)162_storage)dyn_storage": {
								"base": "t_struct(Stake_t)162_storage",
								"encoding": "dynamic_array",
								"label": "struct BStakeSystem.Stake_t[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake_t)162_storage": {
								"encoding": "inplace",
								"label": "struct BStakeSystem.Stake_t",
								"members": [
									{
										"astId": 155,
										"contract": "Maxim/BStakeSystem.sol:BStakeSystem",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 157,
										"contract": "Maxim/BStakeSystem.sol:BStakeSystem",
										"label": "totalRewardAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 159,
										"contract": "Maxim/BStakeSystem.sol:BStakeSystem",
										"label": "level",
										"offset": 0,
										"slot": "2",
										"type": "t_uint32"
									},
									{
										"astId": 161,
										"contract": "Maxim/BStakeSystem.sol:BStakeSystem",
										"label": "rewardTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Maxim/lib/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Maxim/lib/Address.sol\":202:8476  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Maxim/lib/Address.sol\":202:8476  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b65a68a2c831ff5c93a051b4d8a8087c5998347770ec2b9d9ea889132e6da2b864736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b65a68a2c831ff5c93a051b4d8a8087c5998347770ec2b9d9ea889132e6da2b864736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 GAS PUSH9 0xA2C831FF5C93A051B4 0xD8 0xA8 ADDMOD PUSH29 0x5998347770EC2B9D9EA889132E6DA2B864736F6C634300080E00330000 ",
							"sourceMap": "202:8274:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b65a68a2c831ff5c93a051b4d8a8087c5998347770ec2b9d9ea889132e6da2b864736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 GAS PUSH9 0xA2C831FF5C93A051B4 0xD8 0xA8 ADDMOD PUSH29 0x5998347770EC2B9D9EA889132E6DA2B864736F6C634300080E00330000 ",
							"sourceMap": "202:8274:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b65a68a2c831ff5c93a051b4d8a8087c5998347770ec2b9d9ea889132e6da2b864736f6c634300080e0033",
									".code": [
										{
											"begin": 202,
											"end": 8476,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Maxim/BStakeSystem.sol",
								"Maxim/lib/Address.sol",
								"Maxim/lib/IBEP20.sol",
								"Maxim/lib/SafeBEP20.sol",
								"Maxim/lib/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Maxim/lib/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Maxim/lib/Address.sol\":{\"keccak256\":\"0xd430c69966dd69b65fc487cb8b76dc796a3a9acee90910990f6787c646393671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1b8caff628d78f37052533eb038576a876089f82a141d2fb3aa28b4c730e9a\",\"dweb:/ipfs/QmatB7MZQ1uypNt3jCJH33HjJXjvN9HoS868VjAm9N2Byo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Maxim/lib/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Maxim/lib/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Maxim/lib/IBEP20.sol\":{\"keccak256\":\"0x8cac4738a0b00bd1b06b333eb423e0d77a9d70f86576cbab3a4ca01b8773ebf3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35d0231ddf8926dd89b14fcfe2a6ae1c0821ab38178653dc6083e019b2fb6ee9\",\"dweb:/ipfs/QmSh1aEz5BLvsr6Zt8qjV2ZA9EfSUXTGX3PJ49aVgxoSPT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Maxim/lib/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Maxim/lib/SafeBEP20.sol\":606:4159  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Maxim/lib/SafeBEP20.sol\":606:4159  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201383de62cf5a25145cc6942b5467d131b77a512f9ee805de51f25a4c5d99469464736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201383de62cf5a25145cc6942b5467d131b77a512f9ee805de51f25a4c5d99469464736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DUP4 0xDE PUSH3 0xCF5A25 EQ 0x5C 0xC6 SWAP5 0x2B SLOAD PUSH8 0xD131B77A512F9EE8 SDIV 0xDE MLOAD CALLCODE GAS 0x4C 0x5D SWAP10 CHAINID SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "606:3553:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201383de62cf5a25145cc6942b5467d131b77a512f9ee805de51f25a4c5d99469464736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DUP4 0xDE PUSH3 0xCF5A25 EQ 0x5C 0xC6 SWAP5 0x2B SLOAD PUSH8 0xD131B77A512F9EE8 SDIV 0xDE MLOAD CALLCODE GAS 0x4C 0x5D SWAP10 CHAINID SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "606:3553:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 606,
									"end": 4159,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201383de62cf5a25145cc6942b5467d131b77a512f9ee805de51f25a4c5d99469464736f6c634300080e0033",
									".code": [
										{
											"begin": 606,
											"end": 4159,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 606,
											"end": 4159,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 606,
											"end": 4159,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 606,
											"end": 4159,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 606,
											"end": 4159,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 4159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 606,
											"end": 4159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 4159,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 606,
											"end": 4159,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Maxim/BStakeSystem.sol",
								"Maxim/lib/Address.sol",
								"Maxim/lib/IBEP20.sol",
								"Maxim/lib/SafeBEP20.sol",
								"Maxim/lib/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Maxim/lib/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Maxim/lib/Address.sol\":{\"keccak256\":\"0xd430c69966dd69b65fc487cb8b76dc796a3a9acee90910990f6787c646393671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1b8caff628d78f37052533eb038576a876089f82a141d2fb3aa28b4c730e9a\",\"dweb:/ipfs/QmatB7MZQ1uypNt3jCJH33HjJXjvN9HoS868VjAm9N2Byo\"]},\"Maxim/lib/IBEP20.sol\":{\"keccak256\":\"0x8cac4738a0b00bd1b06b333eb423e0d77a9d70f86576cbab3a4ca01b8773ebf3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35d0231ddf8926dd89b14fcfe2a6ae1c0821ab38178653dc6083e019b2fb6ee9\",\"dweb:/ipfs/QmSh1aEz5BLvsr6Zt8qjV2ZA9EfSUXTGX3PJ49aVgxoSPT\"]},\"Maxim/lib/SafeBEP20.sol\":{\"keccak256\":\"0x2cec3c890138f843ede6c88f9f8c7b9474837714dac9f4fe7add01374fb7740b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3dd61205d6c69b52241c46202116849ac4d54f70845eb8f73b88bb22835d129\",\"dweb:/ipfs/QmYjHcnbYvd3qwMFSo2K1GdVQBHaQBjrsabotTyqh4jKFY\"]},\"Maxim/lib/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Maxim/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Maxim/lib/SafeMath.sol\":497:7008  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Maxim/lib/SafeMath.sol\":497:7008  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb6e517fb7c1befe519418bc785880f0e1c38a528d1daa90d736361e89d1660d64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb6e517fb7c1befe519418bc785880f0e1c38a528d1daa90d736361e89d1660d64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH15 0x517FB7C1BEFE519418BC785880F0E1 0xC3 DUP11 MSTORE DUP14 SAR 0xAA SWAP1 0xD7 CALLDATASIZE CALLDATASIZE 0x1E DUP10 0xD1 PUSH7 0xD64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "497:6511:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb6e517fb7c1befe519418bc785880f0e1c38a528d1daa90d736361e89d1660d64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH15 0x517FB7C1BEFE519418BC785880F0E1 0xC3 DUP11 MSTORE DUP14 SAR 0xAA SWAP1 0xD7 CALLDATASIZE CALLDATASIZE 0x1E DUP10 0xD1 PUSH7 0xD64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "497:6511:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb6e517fb7c1befe519418bc785880f0e1c38a528d1daa90d736361e89d1660d64736f6c634300080e0033",
									".code": [
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Maxim/BStakeSystem.sol",
								"Maxim/lib/Address.sol",
								"Maxim/lib/IBEP20.sol",
								"Maxim/lib/SafeBEP20.sol",
								"Maxim/lib/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Maxim/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Maxim/lib/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Maxim/BStakeSystem.sol": {
				"ast": {
					"absolutePath": "Maxim/BStakeSystem.sol",
					"exportedSymbols": {
						"Address": [
							662
						],
						"BStakeSystem": [
							367
						],
						"Context": [
							126
						],
						"IBEP20": [
							763
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							982
						],
						"SafeMath": [
							1294
						]
					},
					"id": 368,
					"license": "Unlicensed",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "194:23:2"
						},
						{
							"absolutePath": "Maxim/lib/IBEP20.sol",
							"file": "./lib/IBEP20.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 368,
							"sourceUnit": 764,
							"src": "221:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Maxim/lib/SafeBEP20.sol",
							"file": "./lib/SafeBEP20.sol",
							"id": 130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 368,
							"sourceUnit": 983,
							"src": "249:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 368,
							"sourceUnit": 105,
							"src": "280:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Maxim/lib/SafeMath.sol",
							"file": "./lib/SafeMath.sol",
							"id": 132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 368,
							"sourceUnit": 1295,
							"src": "334:28:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 133,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "392:7:2"
									},
									"id": 134,
									"nodeType": "InheritanceSpecifier",
									"src": "392:7:2"
								}
							],
							"canonicalName": "BStakeSystem",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 367,
							"linearizedBaseContracts": [
								367,
								104,
								126
							],
							"name": "BStakeSystem",
							"nameLocation": "376:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 138,
									"libraryName": {
										"id": 135,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 982,
										"src": "415:9:2"
									},
									"nodeType": "UsingForDirective",
									"src": "409:27:2",
									"typeName": {
										"id": 137,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 136,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 763,
											"src": "429:6:2"
										},
										"referencedDeclaration": 763,
										"src": "429:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$763",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"global": false,
									"id": 141,
									"libraryName": {
										"id": 139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "448:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "442:27:2",
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "461:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "6bd5a68a4a6cc22607f1514ca193faf12a458c6e5bdf1fdb7a736b2e813c25d9",
									"id": 147,
									"name": "StakedEvent",
									"nameLocation": "483:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "511:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "495:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "525:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "517:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:38:2"
									},
									"src": "477:56:2"
								},
								{
									"anonymous": false,
									"eventSelector": "5dba113b49cfa7c90315e8e604e6b506f7abcb909b01dcb19ec39005086e68fc",
									"id": 153,
									"name": "WithdrawEvent",
									"nameLocation": "545:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "575:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "559:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "589:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "581:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:38:2"
									},
									"src": "539:58:2"
								},
								{
									"canonicalName": "BStakeSystem.Stake_t",
									"id": 162,
									"members": [
										{
											"constant": false,
											"id": 155,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "643:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "635:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "635:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 157,
											"mutability": "mutable",
											"name": "totalRewardAmount",
											"nameLocation": "674:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "666:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "666:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 159,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "709:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "702:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 158,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "702:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "rewardTime",
											"nameLocation": "733:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "725:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "725:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake_t",
									"nameLocation": "616:7:2",
									"nodeType": "StructDefinition",
									"scope": 367,
									"src": "609:142:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "cooldownTime",
									"nameLocation": "767:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 367,
									"src": "759:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "759:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 164,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "782:6:2",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "fd5e6dd1",
									"id": 169,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "818:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 367,
									"src": "801:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
										"typeString": "struct BStakeSystem.Stake_t[]"
									},
									"typeName": {
										"baseType": {
											"id": 167,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 166,
												"name": "Stake_t",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "801:7:2"
											},
											"referencedDeclaration": 162,
											"src": "801:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_t_$162_storage_ptr",
												"typeString": "struct BStakeSystem.Stake_t"
											}
										},
										"id": 168,
										"nodeType": "ArrayTypeName",
										"src": "801:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage_ptr",
											"typeString": "struct BStakeSystem.Stake_t[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 173,
									"mutability": "mutable",
									"name": "_userDetail",
									"nameLocation": "870:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 367,
									"src": "834:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 172,
										"keyType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "834:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 171,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "853:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "952:129:2",
										"statements": [
											{
												"assignments": [
													181,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "969:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "964:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 180,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "964:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 188,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 182,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "982:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "982:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 184,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "997:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "982:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "982:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "963:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "1026:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20424e425f5452414e534645525f4641494c4544",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1035:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8",
																"typeString": "literal_string \"TransferHelper: BNB_TRANSFER_FAILED\""
															},
															"value": "TransferHelper: BNB_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c003c1cf9d05204390affb4b5c81e73f7ce16bfebdbcc9e66e72eda29f5f18b8",
																"typeString": "literal_string \"TransferHelper: BNB_TRANSFER_FAILED\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1018:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1018:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1018:55:2"
											}
										]
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferBNB",
									"nameLocation": "899:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "924:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "916:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "936:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "928:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:27:2"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:2"
									},
									"scope": 367,
									"src": "890:191:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "1121:588:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 198,
															"name": "_userDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1200:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"expression": {
																"id": 199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1212:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1212:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1200:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1227:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1200:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 259,
													"nodeType": "Block",
													"src": "1433:200:2",
													"statements": [
														{
															"assignments": [
																233
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 233,
																	"mutability": "mutable",
																	"name": "userId",
																	"nameLocation": "1456:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 259,
																	"src": "1448:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 232,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1448:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 240,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 234,
																		"name": "_userDetail",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 173,
																		"src": "1465:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"expression": {
																			"id": 235,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1477:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1477:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1465:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1491:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1465:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1448:44:2"
														},
														{
															"expression": {
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 241,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1507:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																				"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																			}
																		},
																		"id": 243,
																		"indexExpression": {
																			"id": 242,
																			"name": "userId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "1515:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1507:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_t_$162_storage",
																			"typeString": "struct BStakeSystem.Stake_t storage ref"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "stakedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 155,
																	"src": "1507:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 245,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1539:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1539:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1507:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 248,
															"nodeType": "ExpressionStatement",
															"src": "1507:41:2"
														},
														{
															"expression": {
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 249,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1563:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																				"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																			}
																		},
																		"id": 251,
																		"indexExpression": {
																			"id": 250,
																			"name": "userId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "1571:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1563:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_t_$162_storage",
																			"typeString": "struct BStakeSystem.Stake_t storage ref"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 161,
																	"src": "1563:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 253,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1593:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1593:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 255,
																		"name": "cooldownTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "1609:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1593:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1563:58:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 258,
															"nodeType": "ExpressionStatement",
															"src": "1563:58:2"
														}
													]
												},
												"id": 260,
												"nodeType": "IfStatement",
												"src": "1197:436:2",
												"trueBody": {
													"id": 231,
													"nodeType": "Block",
													"src": "1230:188:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 208,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1266:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "1266:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1277:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "31",
																				"id": 211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1280:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 212,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "1283:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "1283:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 214,
																					"name": "cooldownTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 165,
																					"src": "1299:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1283:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				{
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 207,
																			"name": "Stake_t",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "1258:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Stake_t_$162_storage_ptr_$",
																				"typeString": "type(struct BStakeSystem.Stake_t storage pointer)"
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1258:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_t_$162_memory_ptr",
																			"typeString": "struct BStakeSystem.Stake_t memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Stake_t_$162_memory_ptr",
																			"typeString": "struct BStakeSystem.Stake_t memory"
																		}
																	],
																	"expression": {
																		"id": 204,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "1245:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																			"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1245:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage_ptr_$_t_struct$_Stake_t_$162_storage_$returns$__$bound_to$_t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct BStakeSystem.Stake_t storage ref[] storage pointer,struct BStakeSystem.Stake_t storage ref)"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1245:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 218,
															"nodeType": "ExpressionStatement",
															"src": "1245:68:2"
														},
														{
															"assignments": [
																220
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 220,
																	"mutability": "mutable",
																	"name": "userId",
																	"nameLocation": "1336:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 231,
																	"src": "1328:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 219,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1328:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 223,
															"initialValue": {
																"expression": {
																	"id": 221,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "1345:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																		"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1345:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1328:31:2"
														},
														{
															"expression": {
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 224,
																		"name": "_userDetail",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 173,
																		"src": "1374:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 227,
																	"indexExpression": {
																		"expression": {
																			"id": 225,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1386:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1386:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1374:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 228,
																	"name": "userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "1400:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1374:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 230,
															"nodeType": "ExpressionStatement",
															"src": "1374:32:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 264,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1678:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1678:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1670:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1670:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1670:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 267,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1691:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1691:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "StakedEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1658:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "EmitStatement",
												"src": "1653:48:2"
											}
										]
									},
									"functionSelector": "3a4b66f1",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1098:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1103:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1121:0:2"
									},
									"scope": 367,
									"src": "1089:620:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1766:323:2",
										"statements": [
											{
												"assignments": [
													278
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "userId",
														"nameLocation": "1795:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "1787:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1787:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 279,
															"name": "_userDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1804:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 282,
														"indexExpression": {
															"expression": {
																"id": 280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1816:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1816:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1804:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1830:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1804:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1787:44:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 286,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "1847:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																	"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																}
															},
															"id": 288,
															"indexExpression": {
																"id": 287,
																"name": "userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1855:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1847:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_t_$162_storage",
																"typeString": "struct BStakeSystem.Stake_t storage ref"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 161,
														"src": "1847:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 290,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1876:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1876:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1847:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "1844:174:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "1893:125:2",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 293,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1910:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																				"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																			}
																		},
																		"id": 295,
																		"indexExpression": {
																			"id": 294,
																			"name": "userId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "1918:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1910:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_t_$162_storage",
																			"typeString": "struct BStakeSystem.Stake_t storage ref"
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 161,
																	"src": "1910:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 297,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1939:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1939:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 299,
																		"name": "cooldownTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "1957:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1939:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1910:59:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "1910:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 304,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1995:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1995:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 303,
																	"name": "withdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "1986:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1986:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "1986:20:2"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 310,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2037:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2037:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 312,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "2055:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																	"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																}
															},
															"id": 314,
															"indexExpression": {
																"id": 313,
																"name": "userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "2063:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2055:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_t_$162_storage",
																"typeString": "struct BStakeSystem.Stake_t storage ref"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 161,
														"src": "2055:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2037:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 317,
												"nodeType": "Return",
												"src": "2030:51:2"
											}
										]
									},
									"functionSelector": "b3743586",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainedTime",
									"nameLocation": "1726:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1757:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1756:9:2"
									},
									"scope": 367,
									"src": "1717:372:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2146:299:2",
										"statements": [
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "userId",
														"nameLocation": "2167:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "2159:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 324,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2159:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 331,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 326,
															"name": "_userDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "2176:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 328,
														"indexExpression": {
															"id": 327,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "2188:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2176:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2199:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2176:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2159:41:2"
											},
											{
												"assignments": [
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2219:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "2211:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 332,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2211:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 334,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "2228:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																		"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																	}
																},
																"id": 336,
																"indexExpression": {
																	"id": 335,
																	"name": "userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "2236:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2228:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_t_$162_storage",
																	"typeString": "struct BStakeSystem.Stake_t storage ref"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "2228:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "33",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2259:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "2228:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2263:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2228:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2211:55:2"
											},
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 343,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "2279:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stake_t_$162_storage_$dyn_storage",
																	"typeString": "struct BStakeSystem.Stake_t storage ref[] storage ref"
																}
															},
															"id": 345,
															"indexExpression": {
																"id": 344,
																"name": "userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "2287:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2279:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_t_$162_storage",
																"typeString": "struct BStakeSystem.Stake_t storage ref"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalRewardAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "2279:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 347,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "2316:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2279:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "2279:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 353,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2368:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2368:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2360:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 351,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2360:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2360:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "2381:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_safeTransferBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2343:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2343:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2343:45:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 360,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2418:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2418:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "2430:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 359,
														"name": "WithdrawEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2404:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2404:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "EmitStatement",
												"src": "2399:38:2"
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2106:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2123:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2115:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:17:2"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:0:2"
									},
									"scope": 367,
									"src": "2097:348:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 368,
							"src": "367:2083:2",
							"usedErrors": []
						}
					],
					"src": "194:2256:2"
				},
				"id": 2
			},
			"Maxim/lib/Address.sol": {
				"ast": {
					"absolutePath": "Maxim/lib/Address.sol",
					"exportedSymbols": {
						"Address": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 369,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 370,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "Address",
							"nameLocation": "210:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1276:260:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 378,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "1505:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1505:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1505:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1527:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1505:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 377,
												"id": 383,
												"nodeType": "Return",
												"src": "1498:30:3"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "225:979:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1219:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1238:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1230:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:17:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1270:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1270:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:6:3"
									},
									"scope": 662,
									"src": "1210:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2542:246:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 396,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2569:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		],
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2561:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 394,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2561:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2561:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2561:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 399,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "2586:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2594:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2553:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "2553:73:3"
											},
											{
												"assignments": [
													405,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2645:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "2640:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 404,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2640:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 412,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 406,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "2658:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2658:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 408,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "2680:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2658:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2658:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2719:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2702:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2702:78:3"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1544:921:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2480:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2506:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2490:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2525:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2517:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:43:3"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:3"
									},
									"scope": 662,
									"src": "2471:317:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "3639:86:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 430,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "3670:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "3678:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3684:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 429,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															436,
															456
														],
														"referencedDeclaration": 456,
														"src": "3657:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 428,
												"id": 434,
												"nodeType": "Return",
												"src": "3650:67:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2796:748:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3559:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3580:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3572:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3601:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3588:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3588:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:35:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3625:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3625:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:14:3"
									},
									"scope": 662,
									"src": "3550:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "4106:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "4146:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4154:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4160:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 452,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "4163:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 448,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															476,
															526
														],
														"referencedDeclaration": 526,
														"src": "4124:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 447,
												"id": 454,
												"nodeType": "Return",
												"src": "4117:59:3"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "3733:216:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3964:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3995:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3987:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4054:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4040:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4040:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3976:97:3"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4092:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4092:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:14:3"
									},
									"scope": 662,
									"src": "3955:229:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "4706:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 469,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "4746:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "4754:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 471,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4760:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4767:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 468,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															476,
															526
														],
														"referencedDeclaration": 526,
														"src": "4724:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4724:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 467,
												"id": 474,
												"nodeType": "Return",
												"src": "4717:94:3"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "4192:361:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4568:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4638:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4625:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4625:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4653:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:84:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4692:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4692:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:14:3"
									},
									"scope": 662,
									"src": "4559:260:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "5259:326:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 493,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5286:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		],
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5278:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 491,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5278:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5278:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5278:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 496,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "5303:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5278:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5310:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5270:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5270:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "5270:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 503,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "5381:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 502,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "5370:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5370:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5390:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5362:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5362:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "5362:60:3"
											},
											{
												"assignments": [
													509,
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5441:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "5436:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 508,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5436:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5463:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "5450:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 510,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5450:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"arguments": [
														{
															"id": 516,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "5503:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 512,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "5477:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5477:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "5496:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5477:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5477:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5435:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5543:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 521,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "5552:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 522,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5564:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 519,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "5526:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 489,
												"id": 524,
												"nodeType": "Return",
												"src": "5519:58:3"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "4827:242:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5084:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5154:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5141:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5141:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5177:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5169:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5207:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5193:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5193:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:121:3"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5245:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:14:3"
									},
									"scope": 662,
									"src": "5075:510:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "5870:99:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "5907:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5915:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5921:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 536,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															578
														],
														"referencedDeclaration": 578,
														"src": "5888:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5888:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "5881:80:3"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "5593:171:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5779:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5806:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5798:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5827:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5814:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5814:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:35:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5856:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5855:14:3"
									},
									"scope": 662,
									"src": "5770:199:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "6323:233:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 557,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6353:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 556,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "6342:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6342:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6362:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6334:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6334:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "6334:67:3"
											},
											{
												"assignments": [
													563,
													565
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6420:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 577,
														"src": "6415:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 562,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6415:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6442:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 577,
														"src": "6429:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 564,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"arguments": [
														{
															"id": 568,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "6474:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 566,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "6456:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6456:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6456:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6414:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 573,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "6523:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 574,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "6535:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 571,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6497:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 554,
												"id": 576,
												"nodeType": "Return",
												"src": "6490:58:3"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "5977:178:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6170:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6207:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "6199:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6237:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "6224:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6224:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6266:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "6252:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6252:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6188:97:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "6309:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6309:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6308:14:3"
									},
									"scope": 662,
									"src": "6161:395:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "6840:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "6879:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "6887:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6893:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 588,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															630
														],
														"referencedDeclaration": 630,
														"src": "6858:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6858:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 587,
												"id": 593,
												"nodeType": "Return",
												"src": "6851:84:3"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "6564:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6752:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6781:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "6773:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "6789:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6789:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6772:35:3"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "6826:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6826:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6825:14:3"
									},
									"scope": 662,
									"src": "6743:200:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "7296:237:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 609,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "7326:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 608,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "7315:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7315:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7335:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7307:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "7307:69:3"
											},
											{
												"assignments": [
													615,
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7395:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "7390:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 614,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7390:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7417:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "7404:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7404:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"arguments": [
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "7451:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 618,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7431:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7431:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7431:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7389:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "7491:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 625,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "7500:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 626,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "7512:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 623,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "7474:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7474:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 606,
												"id": 628,
												"nodeType": "Return",
												"src": "7467:58:3"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "6951:180:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7146:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7185:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "7177:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7215:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "7202:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 599,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7202:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7244:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "7230:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7230:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7166:97:3"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "7282:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7282:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7281:14:3"
									},
									"scope": 662,
									"src": "7137:396:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "7925:548:3",
										"statements": [
											{
												"condition": {
													"id": 642,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 633,
													"src": "7940:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "7999:467:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 646,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "8085:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8085:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8105:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8085:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 656,
																"nodeType": "Block",
																"src": "8400:55:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 653,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 637,
																					"src": "8426:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 652,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8419:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8419:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 655,
																		"nodeType": "ExpressionStatement",
																		"src": "8419:20:3"
																	}
																]
															},
															"id": 657,
															"nodeType": "IfStatement",
															"src": "8081:374:3",
															"trueBody": {
																"id": 651,
																"nodeType": "Block",
																"src": "8108:286:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8231:148:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8254:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8283:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8277:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8277:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8258:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8327:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8331:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8323:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8323:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8344:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8316:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8316:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8316:44:3"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 635,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8283:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 635,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8331:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 650,
																		"nodeType": "InlineAssembly",
																		"src": "8222:157:3"
																	}
																]
															}
														}
													]
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "7936:530:3",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "7949:44:3",
													"statements": [
														{
															"expression": {
																"id": 643,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "7971:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 641,
															"id": 644,
															"nodeType": "Return",
															"src": "7964:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "7541:214:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7770:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7802:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7797:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7797:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7833:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7820:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7820:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7868:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7854:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7854:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:101:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7911:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7910:14:3"
									},
									"scope": 662,
									"src": "7761:712:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 663,
							"src": "202:8274:3",
							"usedErrors": []
						}
					],
					"src": "104:8372:3"
				},
				"id": 3
			},
			"Maxim/lib/IBEP20.sol": {
				"ast": {
					"absolutePath": "Maxim/lib/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							763
						]
					},
					"id": 764,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "48:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 763,
							"linearizedBaseContracts": [
								763
							],
							"name": "IBEP20",
							"nameLocation": "85:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "99:68:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "182:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "193:2:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "219:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:9:4"
									},
									"scope": 763,
									"src": "173:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "236:53:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "304:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "338:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 673,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "338:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:7:4"
									},
									"scope": 763,
									"src": "295:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "353:51:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "419:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "425:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "451:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "451:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "450:15:4"
									},
									"scope": 763,
									"src": "410:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "474:49:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "538:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:4"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "568:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:15:4"
									},
									"scope": 763,
									"src": "529:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "591:54:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "660:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:4"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "694:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:4"
									},
									"scope": 763,
									"src": "651:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "711:74:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "800:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "818:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "810:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:17:4"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "850:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:9:4"
									},
									"scope": 763,
									"src": "791:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "867:215:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 712,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1097:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1114:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1106:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1133:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1125:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:35:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1159:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1159:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:6:4"
									},
									"scope": 763,
									"src": "1088:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "1173:270:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1458:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1476:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1468:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1492:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1484:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:33:4"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1524:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1523:9:4"
									},
									"scope": 763,
									"src": "1449:84:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "1541:655:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2211:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2227:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2219:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2244:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2236:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:33:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2270:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2270:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:6:4"
									},
									"scope": 763,
									"src": "2202:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "2284:304:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2603:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2634:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2626:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2659:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2651:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2687:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2679:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:85:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2719:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2719:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:6:4"
									},
									"scope": 763,
									"src": "2594:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "2733:163:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 753,
									"name": "Transfer",
									"nameLocation": "2908:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2933:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2917:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2955:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2939:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2967:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2959:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2959:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2916:57:4"
									},
									"src": "2902:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "2982:151:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 762,
									"name": "Approval",
									"nameLocation": "3145:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3170:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3154:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3154:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3193:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3177:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3210:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3202:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:63:4"
									},
									"src": "3139:78:4"
								}
							],
							"scope": 764,
							"src": "75:3145:4",
							"usedErrors": []
						}
					],
					"src": "48:3172:4"
				},
				"id": 4
			},
			"Maxim/lib/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "Maxim/lib/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							662
						],
						"IBEP20": [
							763
						],
						"SafeBEP20": [
							982
						],
						"SafeMath": [
							1294
						]
					},
					"id": 983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"absolutePath": "Maxim/lib/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 983,
							"sourceUnit": 764,
							"src": "62:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Maxim/lib/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 983,
							"sourceUnit": 1295,
							"src": "86:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Maxim/lib/Address.sol",
							"file": "./Address.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 983,
							"sourceUnit": 663,
							"src": "112:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 769,
								"nodeType": "StructuredDocumentation",
								"src": "139:465:5",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 982,
							"linearizedBaseContracts": [
								982
							],
							"name": "SafeBEP20",
							"nameLocation": "614:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 772,
									"libraryName": {
										"id": 770,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "637:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "631:27:5",
									"typeName": {
										"id": 771,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 775,
									"libraryName": {
										"id": 773,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "670:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "664:26:5",
									"typeName": {
										"id": 774,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "804:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 789,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "865:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$763",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 712,
																		"src": "865:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "865:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 792,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "890:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 793,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "894:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 787,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "842:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "842:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "842:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 785,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "815:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$763_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "815:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "815:86:5"
											}
										]
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "707:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "737:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "730:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$763",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 777,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 776,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 763,
														"src": "730:6:5"
													},
													"referencedDeclaration": 763,
													"src": "730:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$763",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "761:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "753:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:75:5"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:5"
									},
									"scope": 982,
									"src": "698:211:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "1050:152:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1095:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 814,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "1138:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$763",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 744,
																		"src": "1138:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1138:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 817,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "1167:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 818,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1173:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 819,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "1177:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 812,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1115:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1115:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1115:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 810,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "1061:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$763_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1061:133:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "1061:133:5"
											}
										]
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "926:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "960:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "953:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$763",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 799,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 763,
														"src": "953:6:5"
													},
													"referencedDeclaration": 763,
													"src": "953:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$763",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "984:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "976:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1007:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "999:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1028:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1020:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:98:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:0:5"
									},
									"scope": 982,
									"src": "917:285:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1581:560:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "1889:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1898:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1889:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 839,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1888:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 844,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1929:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$982",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$982",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 843,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1921:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 842,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1921:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 845,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1921:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 846,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "1936:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 840,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "1905:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$763",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 722,
																				"src": "1905:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1905:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1948:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1905:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 850,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1904:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1888:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1965:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1866:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1866:166:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "1866:166:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "2063:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 859,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 828,
																			"src": "2093:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$763",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 732,
																		"src": "2093:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2093:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 862,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "2117:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 863,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "2126:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 857,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2070:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2070:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2070:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 855,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2043:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$763_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2043:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "2043:90:5"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "1210:255:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1480:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1502:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$763",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 827,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 826,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 763,
														"src": "1502:6:5"
													},
													"referencedDeclaration": 763,
													"src": "1502:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$763",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1533:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1525:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1559:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1551:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:80:5"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:5"
									},
									"scope": 982,
									"src": "1471:670:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "2269:237:5",
										"statements": [
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2288:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "2280:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2280:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"arguments": [
														{
															"id": 889,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "2347:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 884,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2327:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$982",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$982",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2319:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 882,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2319:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2319:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 886,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "2334:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 880,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "2303:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$763",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 722,
																"src": "2303:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2303:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1158,
														"src": "2303:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "2398:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 896,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "2441:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$763",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 732,
																		"src": "2441:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2441:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 899,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "2465:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 900,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "2474:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 894,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2418:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2418:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2418:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 892,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2364:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$763_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2364:134:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "2364:134:5"
											}
										]
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2158:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2197:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2190:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$763",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 869,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 763,
														"src": "2190:6:5"
													},
													"referencedDeclaration": 763,
													"src": "2190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$763",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2221:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2213:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2247:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2239:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2239:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:80:5"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2269:0:5"
									},
									"scope": 982,
									"src": "2149:357:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "2634:344:5",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2653:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "2645:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"arguments": [
														{
															"id": 926,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "2743:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2767:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 921,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2705:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$982",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$982",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2697:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 919,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2697:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2697:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 923,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "2712:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 917,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "2681:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$763",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 722,
																"src": "2681:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2681:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1243,
														"src": "2681:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:144:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2645:180:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 931,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "2870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 934,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 908,
																			"src": "2913:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$763",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 732,
																		"src": "2913:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2913:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 937,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "2937:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 938,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "2946:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 932,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2890:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2890:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2890:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$763",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2836:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$763_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:134:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "2836:134:5"
											}
										]
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2523:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2562:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2555:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$763",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 907,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 906,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 763,
														"src": "2555:6:5"
													},
													"referencedDeclaration": 763,
													"src": "2555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$763",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2586:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2578:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2604:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:80:5"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:5"
									},
									"scope": 982,
									"src": "2514:464:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "3439:717:5",
										"statements": [
											{
												"assignments": [
													953
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3806:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 980,
														"src": "3793:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 952,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3793:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 962,
												"initialValue": {
													"arguments": [
														{
															"id": 959,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "3860:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3866:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 956,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "3840:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$763",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$763",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3832:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 954,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3832:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 456,
														"src": "3832:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3832:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3793:108:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 963,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3916:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3916:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3936:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3916:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "3912:237:5",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "3939:210:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 970,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 953,
																				"src": "4071:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4084:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 971,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4084:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 973,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4083:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 968,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4060:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4060:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4060:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4092:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 967,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4052:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4052:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "4052:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "2986:377:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3378:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3405:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3398:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$763",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 946,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 945,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 763,
														"src": "3398:6:5"
													},
													"referencedDeclaration": 763,
													"src": "3398:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$763",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3412:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3412:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3397:33:5"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3439:0:5"
									},
									"scope": 982,
									"src": "3369:787:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 983,
							"src": "606:3553:5",
							"usedErrors": []
						}
					],
					"src": "35:4124:5"
				},
				"id": 5
			},
			"Maxim/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "Maxim/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1294
						]
					},
					"id": 1295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 984,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 985,
								"nodeType": "StructuredDocumentation",
								"src": "294:201:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1294,
							"linearizedBaseContracts": [
								1294
							],
							"name": "SafeMath",
							"nameLocation": "505:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "738:146:6",
										"statements": [
											{
												"id": 1015,
												"nodeType": "UncheckedBlock",
												"src": "749:128:6",
												"statements": [
													{
														"assignments": [
															998
														],
														"declarations": [
															{
																"constant": false,
																"id": 998,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "782:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1015,
																"src": "774:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 997,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "774:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1002,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 999,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1000,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "790:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "774:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "810:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1004,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "814:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "810:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1010,
														"nodeType": "IfStatement",
														"src": "806:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "825:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "832:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1008,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "824:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 996,
															"id": 1009,
															"nodeType": "Return",
															"src": "817:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "857:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1012,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "863:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1013,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "856:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 996,
														"id": 1014,
														"nodeType": "Return",
														"src": "849:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "521:135:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "671:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "686:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "678:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "697:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "689:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:22:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "723:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 992,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "729:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:15:6"
									},
									"scope": 1294,
									"src": "662:222:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "1112:118:6",
										"statements": [
											{
												"id": 1043,
												"nodeType": "UncheckedBlock",
												"src": "1123:100:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1029,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "1152:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1030,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "1156:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1152:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1036,
														"nodeType": "IfStatement",
														"src": "1148:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1167:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1174:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1166:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1028,
															"id": 1035,
															"nodeType": "Return",
															"src": "1159:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "1205:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1039,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "1209:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1205:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1041,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1198:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1028,
														"id": 1042,
														"nodeType": "Return",
														"src": "1191:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "892:138:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1045:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1060:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1052:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1071:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1063:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:22:6"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1097:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1097:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1103:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:15:6"
									},
									"scope": 1294,
									"src": "1036:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1461:427:6",
										"statements": [
											{
												"id": 1085,
												"nodeType": "UncheckedBlock",
												"src": "1472:409:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1057,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "1734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1739:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1734:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1064,
														"nodeType": "IfStatement",
														"src": "1730:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1750:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1756:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1062,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1749:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1056,
															"id": 1063,
															"nodeType": "Return",
															"src": "1742:16:6"
														}
													},
													{
														"assignments": [
															1066
														],
														"declarations": [
															{
																"constant": false,
																"id": 1066,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1781:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1085,
																"src": "1773:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1065,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1773:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1070,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1067,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "1785:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1068,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "1789:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1785:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1773:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1071,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "1809:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1072,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "1813:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1809:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1074,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "1818:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1809:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1080,
														"nodeType": "IfStatement",
														"src": "1805:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1829:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1836:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1828:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1056,
															"id": 1079,
															"nodeType": "Return",
															"src": "1821:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1861:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1082,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "1867:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1083,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1860:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1056,
														"id": 1084,
														"nodeType": "Return",
														"src": "1853:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "1238:141:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1394:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1409:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1401:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1420:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1412:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:22:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1446:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1446:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1452:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:15:6"
									},
									"scope": 1294,
									"src": "1385:503:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "2120:119:6",
										"statements": [
											{
												"id": 1113,
												"nodeType": "UncheckedBlock",
												"src": "2131:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1099,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "2160:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2165:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2160:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1106,
														"nodeType": "IfStatement",
														"src": "2156:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2176:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2183:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1104,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2175:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1098,
															"id": 1105,
															"nodeType": "Return",
															"src": "2168:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2208:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1108,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "2214:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1109,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "2218:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2214:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1111,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2207:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1098,
														"id": 1112,
														"nodeType": "Return",
														"src": "2200:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "1896:142:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2053:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2068:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "2060:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2079:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "2071:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:22:6"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "2105:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2105:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "2111:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:15:6"
									},
									"scope": 1294,
									"src": "2044:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "2481:119:6",
										"statements": [
											{
												"id": 1141,
												"nodeType": "UncheckedBlock",
												"src": "2492:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1127,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "2521:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2521:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1134,
														"nodeType": "IfStatement",
														"src": "2517:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2537:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2544:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1132,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2536:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1126,
															"id": 1133,
															"nodeType": "Return",
															"src": "2529:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2569:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1136,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1118,
																		"src": "2575:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1137,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "2579:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2575:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1139,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2568:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1126,
														"id": 1140,
														"nodeType": "Return",
														"src": "2561:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "2247:152:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2414:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2429:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2421:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2440:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2432:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:22:6"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2466:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2472:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:15:6"
									},
									"scope": 1294,
									"src": "2405:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "2914:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1153,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "2932:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1154,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "2936:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1156,
												"nodeType": "Return",
												"src": "2925:12:6"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "2608:233:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2856:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2868:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2879:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2871:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:22:6"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2905:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:9:6"
									},
									"scope": 1294,
									"src": "2847:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "3295:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1168,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "3313:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1169,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3317:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3313:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1171,
												"nodeType": "Return",
												"src": "3306:12:6"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "2953:269:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3237:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3249:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3241:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3260:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3252:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:22:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3286:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:9:6"
									},
									"scope": 1294,
									"src": "3228:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "3652:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1183,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "3670:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1184,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "3674:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1182,
												"id": 1186,
												"nodeType": "Return",
												"src": "3663:12:6"
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "3334:245:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3594:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3606:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3598:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3598:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3617:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3609:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3597:22:6"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3643:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:9:6"
									},
									"scope": 1294,
									"src": "3585:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "4051:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "4069:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4073:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4069:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1197,
												"id": 1201,
												"nodeType": "Return",
												"src": "4062:12:6"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "3691:287:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3993:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4005:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "3997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4016:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "4008:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:22:6"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "4042:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4042:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4041:9:6"
									},
									"scope": 1294,
									"src": "3984:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "4616:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "4634:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1214,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "4638:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4634:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1212,
												"id": 1216,
												"nodeType": "Return",
												"src": "4627:12:6"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "4090:453:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4558:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4570:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "4562:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4581:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "4573:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:22:6"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "4607:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4607:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4606:9:6"
									},
									"scope": 1294,
									"src": "4549:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "5255:111:6",
										"statements": [
											{
												"id": 1241,
												"nodeType": "UncheckedBlock",
												"src": "5266:93:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1231,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "5299:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1232,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "5304:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5299:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1234,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "5307:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1230,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5291:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5291:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1236,
														"nodeType": "ExpressionStatement",
														"src": "5291:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1237,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "5342:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1238,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "5346:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1229,
														"id": 1240,
														"nodeType": "Return",
														"src": "5335:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "4655:465:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5135:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5157:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5149:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5177:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5169:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5203:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5189:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5189:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:84:6"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5246:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:9:6"
									},
									"scope": 1294,
									"src": "5126:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "5993:110:6",
										"statements": [
											{
												"id": 1266,
												"nodeType": "UncheckedBlock",
												"src": "6004:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1256,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1248,
																		"src": "6037:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6041:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6037:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1259,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "6044:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1255,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6029:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6029:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1261,
														"nodeType": "ExpressionStatement",
														"src": "6029:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1262,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "6079:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1263,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "6083:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6079:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1254,
														"id": 1265,
														"nodeType": "Return",
														"src": "6072:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "5374:484:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5873:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5895:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5887:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5915:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5907:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5907:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5941:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5927:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5927:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5876:84:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5984:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5983:9:6"
									},
									"scope": 1294,
									"src": "5864:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "6895:110:6",
										"statements": [
											{
												"id": 1291,
												"nodeType": "UncheckedBlock",
												"src": "6906:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1281,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "6939:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6943:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6939:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1284,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "6946:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1280,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6931:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6931:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1286,
														"nodeType": "ExpressionStatement",
														"src": "6931:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "6981:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1288,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "6985:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6981:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1279,
														"id": 1290,
														"nodeType": "Return",
														"src": "6974:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "6111:649:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6775:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6797:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "6789:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6817:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "6809:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6809:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6843:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "6829:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6829:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:84:6"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "6886:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6885:9:6"
									},
									"scope": 1294,
									"src": "6766:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1295,
							"src": "497:6511:6",
							"usedErrors": []
						}
					],
					"src": "110:6898:6"
				},
				"id": 6
			}
		}
	}
}